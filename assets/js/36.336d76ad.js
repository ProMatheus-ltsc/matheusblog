(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{1083:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6307timestamp1525416596329-165425970641940.4d3b65e9.png"},1084:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525660893341.4596d7ac.png"},1085:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525660919936.b1cb71d0.png"},1086:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525661663606.6cd07fd1.png"},1087:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525661683312.d229dbc6.png"},1088:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525662101554.2ee638de.png"},1089:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525662637076.c581c0ed.png"},1090:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525662755077.096f243d.png"},1091:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525663167710.ace87ae1.png"},1092:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525742865841.04fc30f1.png"},1093:function(s,a,t){s.exports=t.p+"assets/img/document-uid702660labid6313timestamp1525743130475.bdf2363a.png"},1697:function(s,a,t){"use strict";t.r(a);var n=t(24),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"控制语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制语句"}},[s._v("#")]),s._v(" 控制语句")]),s._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#实验介绍"}},[s._v("实验介绍")])]),n("li",[n("a",{attrs:{href:"#开发准备"}},[s._v("开发准备")])]),n("li",[n("a",{attrs:{href:"#实验步骤"}},[s._v("实验步骤")]),n("ul",[n("li",[n("a",{attrs:{href:"#控制语句详解"}},[s._v("控制语句详解")])]),n("li",[n("a",{attrs:{href:"#if-表达式"}},[s._v("if 表达式")])]),n("li",[n("a",{attrs:{href:"#while-循环"}},[s._v("while 循环")])]),n("li",[n("a",{attrs:{href:"#for-表达式"}},[s._v("for 表达式")])]),n("li",[n("a",{attrs:{href:"#用-try-表达式处理异常"}},[s._v("用 try 表达式处理异常")])]),n("li",[n("a",{attrs:{href:"#没有-break-和-continue-的日子"}},[s._v("没有 “break” 和 “continue” 的日子")])])])])])]),n("p"),s._v(" "),n("h2",{attrs:{id:"实验介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验介绍"}},[s._v("#")]),s._v(" 实验介绍")]),s._v(" "),n("h4",{attrs:{id:"实验内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验内容"}},[s._v("#")]),s._v(" 实验内容")]),s._v(" "),n("p",[s._v("和其它语言（比如 Java，C#）相比，Scala 只内置了为数不多的几种程序控制语句："),n("code",[s._v("if")]),s._v("、"),n("code",[s._v("while")]),s._v("、"),n("code",[s._v("for")]),s._v("、"),n("code",[s._v("try catch")]),s._v(" 以及函数调用，这是因为从 Scala 诞生开始就包含了函数字面量，Scala 内核没有定义过多的控制结构，而是可以通过额外的库来扩展程序的控制结构。")]),s._v(" "),n("p",[s._v("在本实验中，我们就将学习如何使用控制语句。")]),s._v(" "),n("h4",{attrs:{id:"实验知识点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验知识点"}},[s._v("#")]),s._v(" 实验知识点")]),s._v(" "),n("ul",[n("li",[s._v("if 表达式")]),s._v(" "),n("li",[s._v("while 循环")]),s._v(" "),n("li",[s._v("for 表达式")]),s._v(" "),n("li",[s._v("用 try 表达式处理异常")]),s._v(" "),n("li",[s._v("Match 表达式")]),s._v(" "),n("li",[s._v("代替 “break” 和 “continue”")])]),s._v(" "),n("h4",{attrs:{id:"实验环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验环境"}},[s._v("#")]),s._v(" 实验环境")]),s._v(" "),n("ul",[n("li",[s._v("Scala")]),s._v(" "),n("li",[s._v("Xfce 终端")])]),s._v(" "),n("h4",{attrs:{id:"适合人群"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#适合人群"}},[s._v("#")]),s._v(" 适合人群")]),s._v(" "),n("p",[s._v("本课程难度为一般，属于初级级别课程，适合零基础或具有 Java 编程基础的用户。")]),s._v(" "),n("h2",{attrs:{id:"开发准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开发准备"}},[s._v("#")]),s._v(" 开发准备")]),s._v(" "),n("p",[s._v("为了使用交互式 Scala 解释器，你可以在打开的终端中输入命令：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" -l hadoop "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#密码为 hadoop")]),s._v("\nscala\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("当出现 "),n("code",[s._v("scala>")]),s._v(" 开始的命令行提示符时，就说明你已经成功进入解释器了。如下图所示。")]),s._v(" "),n("blockquote",[n("p",[s._v("注意：由于在线实验环境的限制，在 Spark shell 中运行代码会稍微慢一点。")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(1083),alt:"1-2.1-1"}})]),s._v(" "),n("h2",{attrs:{id:"实验步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验步骤"}},[s._v("#")]),s._v(" 实验步骤")]),s._v(" "),n("h3",{attrs:{id:"控制语句详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#控制语句详解"}},[s._v("#")]),s._v(" 控制语句详解")]),s._v(" "),n("p",[s._v("Scala 的所有控制结构都有返回结果，如果你使用过 Java 或 C#，就可能了解 Java 提供的三元运算符 "),n("code",[s._v("?:")]),s._v("，它的基本功能和 "),n("code",[s._v("if")]),s._v(" 一样，都可以返回结果。Scala 在此基础上所有控制结构（"),n("code",[s._v("while")]),s._v("、"),n("code",[s._v("try")]),s._v("、"),n("code",[s._v("if")]),s._v(" 等）都可以返回结果。这样做的一个好处是，可以简化代码，如果没有这种特点，程序员常常需要创建一个临时变量用来保存结果。")]),s._v(" "),n("p",[s._v("总的来说，Scala 提供的基本程序控制结构，“麻雀虽小，五脏俱全”，虽然少，但足够满足其他指令式语言（如 Java，C++）所支持的程序控制功能。而且，由于这些指令都有返回结果，可以使得代码更为精简。")]),s._v(" "),n("h3",{attrs:{id:"if-表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#if-表达式"}},[s._v("#")]),s._v(" if 表达式")]),s._v(" "),n("p",[s._v("Scala 语言的 "),n("code",[s._v("if")]),s._v(" 的基本功能和其它语言没有什么不同，它根据条件执行两个不同的分支。比如，使用 Java 风格编写下面 Scala 的 if 语句的一个例子：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  result "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"worker"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  result "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Student"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nprintln"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1084),alt:"6-3.2-1"}})]),s._v(" "),n("p",[s._v("上面代码和使用 Java 实现没有太多区别，看起来不怎么像 Scala 风格，我们重新改写一下，利用 "),n("code",[s._v("if")]),s._v(" 可以返回结果这个特点。")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Worker"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Student"')]),s._v("\nprintln"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1085),alt:"6-3.2-2"}})]),s._v(" "),n("p",[s._v("首先这种代码比前段代码短，更重要的是这段代码使用 "),n("code",[s._v("val")]),s._v("而无需使用 "),n("code",[s._v("var")]),s._v(" 类型的变量。使用 "),n("code",[s._v("val")]),s._v(" 为函数式编程风格。")]),s._v(" "),n("h3",{attrs:{id:"while-循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#while-循环"}},[s._v("#")]),s._v(" while 循环")]),s._v(" "),n("p",[s._v("Scala 的 "),n("code",[s._v("while")]),s._v(" 循环和其它语言（如 Java）功能一样，它含有一个条件和一个循环体。只要条件满足，就一直执行循环体的代码。")]),s._v(" "),n("p",[s._v("比如，下面的计算最大公约数的一个实现：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" gcdLoop "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" y\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" temp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\n      a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" a\n      b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" temp\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  b\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1086),alt:"6-3.3-1"}})]),s._v(" "),n("p",[s._v("Scala 也有 "),n("code",[s._v("do-while")]),s._v(" 循环，它和 "),n("code",[s._v("while")]),s._v(" 循环类似，只是检查条件是否满足是在循环体执行之后检查。")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" line "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   line "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" readLine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Read: "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("Scala 的 "),n("code",[s._v("while")]),s._v(" 和 "),n("code",[s._v("do-while")]),s._v(" 称为“循环”而不是表达式，是因为它不产生有用的返回值（或是返回值为 "),n("code",[s._v("Unit")]),s._v("），可以写成 "),n("code",[s._v("()")]),s._v("。"),n("code",[s._v("()")]),s._v(" 的存在使得 Scala 的 "),n("code",[s._v("Unit")]),s._v(" 和 Java 的 "),n("code",[s._v("void")]),s._v(" 类型有所不同。")]),s._v(" "),n("p",[s._v("比如，下面的语句在 Scala 的解释器中执行：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[s._v("scala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" greet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hi"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\ngreet"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v("\n\nscala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" greet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" warning"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" comparing values of types "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v(" and "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v(" using `"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("' will always "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n              greet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                      "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("\nhi\nres0"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Boolean")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("可以看到（或者看到警告）"),n("code",[s._v("greet()")]),s._v(" 的返回值和 "),n("code",[s._v("()")]),s._v(" 比较结果为 "),n("code",[s._v("true")]),s._v("。")]),s._v(" "),n("p",[s._v("注意另外一种可以返回 "),n("code",[s._v("Unit")]),s._v(" 结果的语句为 "),n("code",[s._v("var")]),s._v(" 类型赋值语句。如果你使用如下 Java 风格的语句将碰到麻烦：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("line "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" readLine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Read: "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("如果你试图编译或是执行这段代码会有如下警告：")]),s._v(" "),n("p",[n("img",{attrs:{src:t(1087),alt:"6-3.3-2"}})]),s._v(" "),n("p",[s._v("意思是 "),n("code",[s._v("Unit")]),s._v("（赋值语句返回值）和 "),n("code",[s._v("String")]),s._v(" 做不等比较永远为 "),n("code",[s._v("true")]),s._v("。上面的代码会是一个死循环。")]),s._v(" "),n("p",[s._v("正因为 "),n("code",[s._v("while")]),s._v(" 循环没有值，因此在纯函数化编程中应该避免使用 "),n("code",[s._v("while")]),s._v(" 循环。Scala 保留 "),n("code",[s._v("while")]),s._v(" 循环，是因为在某些时候使用循环代码比较容易理解。而如果使用纯函数化编程，需要执行一些重复运行的代码时，通常就需要使用回溯函数来实现，回溯函数通常看起来不是很直观。")]),s._v(" "),n("p",[s._v("比如前面计算最大公约数的函数使用纯函数化编程借助回溯函数实现如下：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" gcd "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" gcd "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("总的来说，推荐尽量避免在代码中使用 "),n("code",[s._v("while")]),s._v(" 循环，正如函数化编程要避免使用 "),n("code",[s._v("var")]),s._v(" 变量一样。而使用 "),n("code",[s._v("while")]),s._v(" 循环时通常也会使用到 "),n("code",[s._v("var")]),s._v(" 变量，因此在你打算使用 "),n("code",[s._v("while")]),s._v(" 循环时需要特别小心，看是否可以避免使用它们。")]),s._v(" "),n("h3",{attrs:{id:"for-表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-表达式"}},[s._v("#")]),s._v(" for 表达式")]),s._v(" "),n("p",[s._v("Scala 中的 "),n("code",[s._v("for")]),s._v(" 表达式有如一把完成迭代任务的瑞士军刀，它允许你使用一些简单的部件以不同的方法组合完成许多复杂的迭代任务。简单的应用，比如枚举一个整数列表，较复杂的应用可以同时枚举多个不同类型的列表，根据条件过滤元素，并可以生成新的集合。")]),s._v(" "),n("h4",{attrs:{id:"枚举集合元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举集合元素"}},[s._v("#")]),s._v(" 枚举集合元素")]),s._v(" "),n("p",[s._v("这是使用 "),n("code",[s._v("for")]),s._v(" 表示式的一个基本用法，和 Java 的 "),n("code",[s._v("for")]),s._v(" 非常类似，比如下面的代码可以枚举当前目录下所有文件：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("listFiles\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v("filesHere"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1088),alt:"6-3.4.1-1"}})]),s._v(" "),n("p",[s._v("其中如 "),n("code",[s._v("file <– filesHere")]),s._v(" 的语法结构，在 Scala 中称为“生成器（generator）”。本例中，"),n("code",[s._v("filesHere")]),s._v(" 的类型为 "),n("code",[s._v("Array[File]")]),s._v("。每次迭代中，变量 "),n("code",[s._v("file")]),s._v(" 会初始化为该数组中一个元素，"),n("code",[s._v("file")]),s._v(" 的 "),n("code",[s._v("toString()")]),s._v(" 为文件的文件名，因此 "),n("code",[s._v("println(file)")]),s._v(" 打印出文件名。")]),s._v(" "),n("p",[s._v("Scala 的 "),n("code",[s._v("for")]),s._v(" 表达式支持所有类型的集合，而不仅仅是数组，比如下面使用 "),n("code",[s._v("for")]),s._v(" 表达式来枚举一个 "),n("code",[s._v("Range")]),s._v(" 类型。")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[s._v(" scala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" to "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Interation"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nInteration "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nInteration "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nInteration "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nInteration "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"过滤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过滤"}},[s._v("#")]),s._v(" 过滤")]),s._v(" "),n("p",[s._v("某些时候，你可能不想枚举集合中的每一个元素，而是只想迭代某些符合条件的元素。在 Scala 中，你可以为 "),n("code",[s._v("for")]),s._v(" 表达式添加一个过滤器——在 "),n("code",[s._v("for")]),s._v(" 的括号内添加一个 "),n("code",[s._v("if")]),s._v(" 语句，例如：")]),s._v(" "),n("p",[s._v("修改前面枚举文件的例子，改成只列出 "),n("code",[s._v(".scala")]),s._v(" 文件，示例如下：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("listFiles\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" file "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v("filesHere\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("如果有必要的话，你可以使用多个过滤器，只要添加多个 if 语句即可。比如，为保证前面列出的文件不是目录，可以添加一个 "),n("code",[s._v("if")]),s._v("，如下面代码：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("listFiles\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" file "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v("filesHere\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isFile\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"嵌套迭代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#嵌套迭代"}},[s._v("#")]),s._v(" 嵌套迭代")]),s._v(" "),n("p",[n("code",[s._v("for")]),s._v(" 表达式支持多重迭代。下面的例子使用两重迭代，外面的循环枚举 "),n("code",[s._v("filesHere")]),s._v("，而内部循环枚举该文件的每一行文字。实现了类似 Unix 中的 "),n("code",[s._v("grep")]),s._v(" 命令：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("listFiles\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" fileLines "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n   scala"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fromFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLines"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toList\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" grep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    file "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    line "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" fileLines"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("trim"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("matches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("trim"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ngrep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*gcd.*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1089),alt:"6-3.4.3-1"}})]),s._v(" "),n("p",[s._v("注意上面代码中，两个迭代之间使用了 "),n("code",[s._v(";")]),s._v("，如果你使用 "),n("code",[s._v("{}")]),s._v(" 替代 "),n("code",[s._v("for")]),s._v(" 的 "),n("code",[s._v("()")]),s._v(" 括号，你可以不使用 "),n("code",[s._v("；")]),s._v(" 分隔这两个“生成器”。这是因为，Scala 编译器不推算包含在花括号内的省掉的 "),n("code",[s._v(";")]),s._v("。使用 "),n("code",[s._v("{}")]),s._v(" 改写的代码如下：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("listFiles\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" fileLines "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n   scala"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fromFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLines"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toList\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" grep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    file "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    line "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" fileLines"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("trim"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("matches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("trim"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ngrep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*gcd.*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1090),alt:"6-3.4.3-2"}})]),s._v(" "),n("p",[s._v("这两段代码是等效的。")]),s._v(" "),n("h4",{attrs:{id:"绑定中间变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定中间变量"}},[s._v("#")]),s._v(" 绑定中间变量")]),s._v(" "),n("p",[s._v("你可能注意到，前面代码使用了多次 "),n("code",[s._v("line.trim")]),s._v("。如果 "),n("code",[s._v("trim")]),s._v(" 是个耗时的操作，你可能希望 "),n("code",[s._v("trim")]),s._v(" 只计算一次。Scala 允许你使用 "),n("code",[s._v("=")]),s._v(" 号来绑定计算结果到一个新变量。绑定的作用和 "),n("code",[s._v("val")]),s._v(" 类似，只是不需要使用 "),n("code",[s._v("val")]),s._v(" 关键字。例如，修改前面的例子，只计算一次 "),n("code",[s._v("trim")]),s._v("，把结果保存在 "),n("code",[s._v("trimmed")]),s._v(" 变量中。")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("listFiles\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" fileLines "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("File"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n   scala"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fromFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getLines"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toList\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" grep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    file "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" filesHere "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    line "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" fileLines"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    trimmed "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("trim\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" trimmed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("matches"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" trimmed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ngrep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*gcd.*"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1091),alt:"6-3.4.4-1"}})]),s._v(" "),n("h4",{attrs:{id:"生成新集合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成新集合"}},[s._v("#")]),s._v(" 生成新集合")]),s._v(" "),n("p",[n("code",[s._v("for")]),s._v(" 表达式也可以用来生产新的集合，这是 Scala 的 "),n("code",[s._v("for")]),s._v("表达式比 Java 的 "),n("code",[s._v("for")]),s._v(" 语句功能强大的地方。它的基本语法如下：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" clauses "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" body\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("关键字 "),n("code",[s._v("yield")]),s._v(" 放在 body 的前面，"),n("code",[s._v("for")]),s._v(" 每迭代一次，就产生一个 "),n("code",[s._v("body")]),s._v("。"),n("code",[s._v("yield")]),s._v(" 收集所有的 "),n("code",[s._v("body")]),s._v(" 结果，返回一个 "),n("code",[s._v("body")]),s._v(" 类型的集合。")]),s._v(" "),n("h3",{attrs:{id:"用-try-表达式处理异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用-try-表达式处理异常"}},[s._v("#")]),s._v(" 用 try 表达式处理异常")]),s._v(" "),n("p",[s._v("Scala 的异常处理和其它语言比如 Java 类似，一个方法可以通过抛出异常而不返回值的方式来终止相关代码的运行。调用函数，可以捕获这个异常作出相应的处理，或者直接退出。在这种情况下，异常会传递给调用函数的调用者，依次向上传递，直到有方法处理这个异常。")]),s._v(" "),n("h4",{attrs:{id:"抛出异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抛出异常"}},[s._v("#")]),s._v(" 抛出异常")]),s._v(" "),n("p",[s._v("Scala 抛出异常的方法和 Java 一样，使用 "),n("code",[s._v("throw")]),s._v(" 方法。例如，抛出一个新的参数异常：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" IllegalArgumentException\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("尽管看起来似乎有些自相矛盾，Scala 中，"),n("code",[s._v("throw")]),s._v(" 也是一个表达式，也是有返回值的。比如下面的例子：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" half "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" RuntimeException"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"n must be even"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("当 "),n("code",[s._v("n")]),s._v(" 为偶数时，"),n("code",[s._v("n")]),s._v(" 初始化为 "),n("code",[s._v("n")]),s._v(" 的一半；而如果 "),n("code",[s._v("n")]),s._v(" 为奇数，将在初始化 "),n("code",[s._v("half")]),s._v(" 之前就抛出异常。正因为如此，可以把 "),n("code",[s._v("throw")]),s._v(" 的返回值视作任意类型。")]),s._v(" "),n("p",[s._v("技术上来说，抛出异常的类型为 "),n("code",[s._v("Nothing")]),s._v("。对于上面的例子，整个 "),n("code",[s._v("if")]),s._v(" 表达式的类型为可以计算出值的那个分支的类型。如果 "),n("code",[s._v("n")]),s._v(" 为 "),n("code",[s._v("Int")]),s._v("，那么 "),n("code",[s._v("if")]),s._v(" 表示式的类型也是 "),n("code",[s._v("Int")]),s._v(" 类型，而不需要考虑 "),n("code",[s._v("throw")]),s._v(" 表达式的类型。")]),s._v(" "),n("h4",{attrs:{id:"捕获异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#捕获异常"}},[s._v("#")]),s._v(" 捕获异常")]),s._v(" "),n("p",[s._v("Scala 捕获异常的方法和后面介绍的“模式匹配”的使用方法是一致的。比如：")]),s._v(" "),n("blockquote",[n("p",[s._v("注意，这个地方的文件需要自己创建，并将文件目录写到 FileReader 中。")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" input.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1092),alt:"6-3.5.2-1"}})]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("FileReader\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("FileNotFoundException\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("IOException\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" f "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" FileReader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/hadoop/input.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" FileNotFoundException "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//handle missing file")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" IOException "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//handle other I/O error")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1093),alt:"6-3.5.2-2"}})]),s._v(" "),n("p",[s._v("模式匹配将在后面介绍，"),n("code",[s._v("try-catch")]),s._v(" 表达式的基本用法和 Java 一样。如果 "),n("code",[s._v("try")]),s._v(" 块中代码在执行过程中出现异常，将逐个检测每个 "),n("code",[s._v("catch")]),s._v(" 块。在上面的例子，如果打开文件出现异常，将先检查是否是 "),n("code",[s._v("FileNotFoundException")]),s._v(" 异常。如果不是，再检查是否是 "),n("code",[s._v("IOException")]),s._v("。如果还不是，再终止 "),n("code",[s._v("try-catch")]),s._v(" 块的运行，而向上传递这个异常。")]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("注意：")]),s._v(" 和 Java 异常处理不同的一点是，Scala 不需要你捕获 "),n("code",[s._v("checked")]),s._v(" 的异常。这点和 C# 一样，也不需要使用 "),n("code",[s._v("throw")]),s._v(" 来声明某个异常。当然，如果有需要，还是可以通过 "),n("code",[s._v("@throw")]),s._v(" 来声明一个异常，但这不是必须的。")])]),s._v(" "),n("h4",{attrs:{id:"finally-语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#finally-语句"}},[s._v("#")]),s._v(" finally 语句")]),s._v(" "),n("p",[s._v("Scala 也支持 "),n("code",[s._v("finally")]),s._v(" 语句，你可以在 "),n("code",[s._v("finally")]),s._v(" 块中添加一些代码。这些代码不管 "),n("code",[s._v("try")]),s._v(" 块是否抛出异常，都会执行。比如，你可以在 "),n("code",[s._v("finally")]),s._v(" 块中添加代码保证关闭已经打开的文件，而不管前面代码中是否出现异常。")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("FileReader\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" file "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" FileReader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/hadoop/input.txt"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//use the file")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[n("img",{attrs:{src:"document-uid702660labid6313timestamp1525743159724.png",alt:"6-3.5.3-1"}})]),s._v(" "),n("h4",{attrs:{id:"生成返回值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成返回值"}},[s._v("#")]),s._v(" 生成返回值")]),s._v(" "),n("p",[s._v("和大部分 Scala 控制结构一样，Scala 的 "),n("code",[s._v("try-catch-finally")]),s._v(" 也生成某个值。比如下面的例子尝试分析一个 URL，如果输入的 URL 无效，则使用缺省的 URL 链接地址：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("URL\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("MalformedURLException\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" urlFor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" URL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" MalformedURLException "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" URL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://www.scala-lang.org"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("img",{attrs:{src:"document-uid702660labid6313timestamp1525743312024.png",alt:"6-3.5.4-1"}})]),s._v(" "),n("p",[s._v("通常情况下，"),n("code",[s._v("finally")]),s._v(" 块用来做些清理工作，而不应该产生结果，但如果在 "),n("code",[s._v("finally")]),s._v(" 块中使用 "),n("code",[s._v("return")]),s._v(" 来返回某个值，这个值将覆盖 "),n("code",[s._v("try-catch")]),s._v(" 产生的结果，比如：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[s._v("scala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nf"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v("\n\nscala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" f\nres0"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("而下面的代码：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[s._v("scala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" warning"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" a pure expression does nothing in statement position"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" you may be omitting necessary parentheses\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" g"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n                                     "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("\n\ng"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v("\n\nscala"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" g\nres0"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("结果却是 "),n("code",[s._v("1")]),s._v("，上面两种情况常常使得程序员产生困惑，因此关键的一点是避免在 "),n("code",[s._v("finally")]),s._v(" 生成返回值，而只用来做些清理工作，比如关闭文件。")]),s._v(" "),n("h4",{attrs:{id:"match-表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#match-表达式"}},[s._v("#")]),s._v(" Match 表达式")]),s._v(" "),n("p",[s._v("Scala 的 "),n("code",[s._v("Match")]),s._v(" 表达式支持从多个选择中选取其一，类似其它语言中的 "),n("code",[s._v("switch")]),s._v(" 语句。通常来说，Scala 的 "),n("code",[s._v("match")]),s._v(" 表达式支持任意的匹配模式，这种基本模式将在后面介绍。")]),s._v(" "),n("p",[s._v("接下来，为你介绍类似 "),n("code",[s._v("switch")]),s._v(" 用法的 "),n("code",[s._v("match")]),s._v(" 表达式，它也是在多个选项中选择其一。")]),s._v(" "),n("p",[s._v("例如，下面的例子从参数中读取食品的名称，然后根据食品的名称，打印出和该食品搭配的食品。比如，输入 "),n("code",[s._v("salt")]),s._v("，与之对应的食品为 "),n("code",[s._v("pepper")]),s._v("。如果是 "),n("code",[s._v("chips")]),s._v("，那么搭配的就是 "),n("code",[s._v("salsa")]),s._v(" 等等。")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" args "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chips"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" firstArg "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\nfirstArg "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"salt"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pepper"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chips"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"salsa"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eggs"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bacon"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" _ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"huh?"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[n("img",{attrs:{src:"document-uid702660labid6313timestamp1525744075929.png",alt:"6-3.5.5-1"}})]),s._v(" "),n("p",[s._v("这段代码和 Java 的 "),n("code",[s._v("switch")]),s._v(" 相比有几点不同：")]),s._v(" "),n("ul",[n("li",[s._v("一是任何类型的常量都可以用在 "),n("code",[s._v("case")]),s._v(" 语句中，而不仅仅是 "),n("code",[s._v("int")]),s._v(" 或是枚举类型。")]),s._v(" "),n("li",[s._v("二是每个 "),n("code",[s._v("case")]),s._v(" 语句无需使用 "),n("code",[s._v("break")]),s._v("，Scala 不支持 “"),n("code",[s._v("fall through")]),s._v("”。")]),s._v(" "),n("li",[s._v("三是 Scala 的缺省匹配为 "),n("code",[s._v("_")]),s._v("，其作用类似 java 中的 "),n("code",[s._v("default")]),s._v("。")])]),s._v(" "),n("p",[s._v("而最关键的一点，是 scala 的 "),n("code",[s._v("match")]),s._v(" 表达式有返回值。上面的代码使用的是 "),n("code",[s._v("println")]),s._v(" 打印，而实际上你可以使用表达式，比如修改上面的代码如下：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" firstArg "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" friend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" firstArg "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"salt"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pepper"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chips"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"salsa"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eggs"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bacon"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" _ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"huh?"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nprintln"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("friend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[n("img",{attrs:{src:"document-uid702660labid6313timestamp1525744622605.png",alt:"6-3.5.5-2"}})]),s._v(" "),n("p",[s._v("这段代码和前面的代码是等效的，不同的是后面这段代码 "),n("code",[s._v("match")]),s._v(" 表达式返回结果。")]),s._v(" "),n("h3",{attrs:{id:"没有-break-和-continue-的日子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#没有-break-和-continue-的日子"}},[s._v("#")]),s._v(" 没有 “break” 和 “continue” 的日子")]),s._v(" "),n("p",[s._v("你也许注意到：到目前为止，我们介绍 Scala 的内置控制结构时，没有提到使用 "),n("code",[s._v("break")]),s._v(" 和 "),n("code",[s._v("continue")]),s._v("。Scala 特地没有在内置控制结构中包含 "),n("code",[s._v("break")]),s._v(" 和 "),n("code",[s._v("continue")]),s._v("，这是因为这两个控制结构和函数字面量有点格格不入，函数字面量我们将在后面介绍。函数字面量和其它类型字面量，比如数值字面量 "),n("code",[s._v("4")]),s._v("、"),n("code",[s._v("5.6")]),s._v(" 相比，他们在 Scala 的地位相同。")]),s._v(" "),n("p",[s._v("我们很清楚 "),n("code",[s._v("break")]),s._v(" 和 "),n("code",[s._v("continue")]),s._v(" 在循环控制结构中的作用。Scala 内置控制结构特地去掉了 "),n("code",[s._v("break")]),s._v(" 和 "),n("code",[s._v("continue")]),s._v("，这是为了更好的适应函数化编程。不过，你不用担心，Scala 提供了多种方法来替代 "),n("code",[s._v("break")]),s._v(" 和 "),n("code",[s._v("continue")]),s._v(" 的作用。")]),s._v(" "),n("p",[s._v("一个简单的方法，是使用一个 "),n("code",[s._v("if")]),s._v(" 语句来代替一个 "),n("code",[s._v("continue")]),s._v("，使用一个布尔控制量来去除一个 "),n("code",[s._v("break")]),s._v("。比如下面的 Java 代码在循环结构中使用 "),n("code",[s._v("continue")]),s._v(" 和 "),n("code",[s._v("break")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" foundIt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("startWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("endsWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        foundIt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("这段 Java 代码实现的功能，是从一组字符串中寻找以 "),n("code",[s._v(".scala")]),s._v(" 结尾的字符串，但跳过以 "),n("code",[s._v("-")]),s._v(" 开头的字符串。")]),s._v(" "),n("p",[s._v("下面我们使用 "),n("code",[s._v("if")]),s._v(" 和 "),n("code",[s._v("boolean")]),s._v(" 变量，逐句将这段使用 Scala 来实现（不使用 "),n("code",[s._v("break")]),s._v(" 和 "),n("code",[s._v("continue")]),s._v("）如下：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" foundIt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("foundIt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        foundIt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[n("img",{attrs:{src:"document-uid702660labid6313timestamp1525744646313.png",alt:"6-3.6-1"}})]),s._v(" "),n("p",[s._v("可以看到，我们使用 "),n("code",[s._v("if")]),s._v("（与前面的 "),n("code",[s._v("continue")]),s._v(" 条件相反）去掉了 "),n("code",[s._v("continue")]),s._v("，而重用了 "),n("code",[s._v("foundIt")]),s._v(" 布尔变量，去掉了 "),n("code",[s._v("break")]),s._v("。")]),s._v(" "),n("p",[s._v("这段代码和前面 Java 实现非常类似，并且使用了两个 "),n("code",[s._v("var")]),s._v(" 变量。使用纯函数化编程的一个方法是去掉 "),n("code",[s._v("var")]),s._v(" 变量的使用，而递归函数（回溯函数）是用于去除循环结构中使用 "),n("code",[s._v("var")]),s._v(" 变量时，通常使用的一个方法。")]),s._v(" "),n("p",[s._v("使用递归函数重新实现上面代码的查询功能：")]),s._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" searchFrom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" searchFrom "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endsWith"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".scala"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" i\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" searchFrom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" searchFrom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("img",{attrs:{src:"document-uid702660labid6313timestamp1525745027668.png",alt:"6-3.6-2"}})]),s._v(" "),n("p",[s._v("在函数化编程中，使用递归函数来实现循环是非常常见的一种方法，我们应该熟悉递归函数的用法。")])])}),[],!1,null,null,null);a.default=e.exports}}]);