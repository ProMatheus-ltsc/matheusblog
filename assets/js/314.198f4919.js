(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{1663:function(s,a,t){"use strict";t.r(a);var n=t(24),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"使用package-包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用package-包"}},[s._v("#")]),s._v(" 使用Package(包)")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#实验介绍"}},[s._v("实验介绍")])]),t("li",[t("a",{attrs:{href:"#开发准备"}},[s._v("开发准备")])]),t("li",[t("a",{attrs:{href:"#实验步骤"}},[s._v("实验步骤")]),t("ul",[t("li",[t("a",{attrs:{href:"#将代码放入包中"}},[s._v("将代码放入包中")])]),t("li",[t("a",{attrs:{href:"#引用包中的代码"}},[s._v("引用包中的代码")])]),t("li",[t("a",{attrs:{href:"#包对象"}},[s._v("包对象")])])])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"实验介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实验介绍"}},[s._v("#")]),s._v(" 实验介绍")]),s._v(" "),t("h4",{attrs:{id:"实验内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实验内容"}},[s._v("#")]),s._v(" 实验内容")]),s._v(" "),t("p",[s._v("软件开发过程中，减小程序之间的“耦合性”至关重要。降低耦合性的一个方法是模块化。Scala 提供和 Java 类似的分包机制，但又稍有不同。因此，即使你了解 Java 语言，还是建议继续学习本节内容。")]),s._v(" "),t("h4",{attrs:{id:"实验知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实验知识点"}},[s._v("#")]),s._v(" 实验知识点")]),s._v(" "),t("ul",[t("li",[s._v("包的概念")]),s._v(" "),t("li",[s._v("引用包中的代码")]),s._v(" "),t("li",[s._v("使用 import")]),s._v(" "),t("li",[s._v("隐含的 import")]),s._v(" "),t("li",[s._v("包对象")])]),s._v(" "),t("h4",{attrs:{id:"实验环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实验环境"}},[s._v("#")]),s._v(" 实验环境")]),s._v(" "),t("ul",[t("li",[s._v("Scala")]),s._v(" "),t("li",[s._v("Xfce 终端")])]),s._v(" "),t("h4",{attrs:{id:"适合人群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适合人群"}},[s._v("#")]),s._v(" 适合人群")]),s._v(" "),t("p",[s._v("本课程难度为一般，属于初级级别课程，适合零基础或具有 Java 编程基础的用户。")]),s._v(" "),t("h2",{attrs:{id:"开发准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发准备"}},[s._v("#")]),s._v(" 开发准备")]),s._v(" "),t("p",[s._v("为了使用交互式 Scala 解释器，你可以在打开的终端中输入命令：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" -l hadoop "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#密码为 hadoop")]),s._v("\nscala\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("当出现 "),t("code",[s._v("scala>")]),s._v(" 开始的命令行提示符时，就说明你已经成功进入解释器了。如下图所示。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意：由于在线实验环境的限制，在 Spark shell 中运行代码会稍微慢一点。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"document-uid702660labid6307timestamp1525416596329-1654260546570148.png",alt:"1-2.1-1"}})]),s._v(" "),t("h2",{attrs:{id:"实验步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实验步骤"}},[s._v("#")]),s._v(" 实验步骤")]),s._v(" "),t("h3",{attrs:{id:"将代码放入包中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将代码放入包中"}},[s._v("#")]),s._v(" 将代码放入包中")]),s._v(" "),t("p",[s._v("我们之前的例子中，没有明确使用 "),t("code",[s._v("package")]),s._v("，因此它们存在于“未命名”的包中，或是默认包中。")]),s._v(" "),t("p",[s._v("在 Scala 将代码定义到某个包中有两种方式：")]),s._v(" "),t("p",[s._v("第一种方法和 Java 一样，在文件头定义包名，这种方法将后续所有代码都放在该包中。")]),s._v(" "),t("p",[s._v("比如：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsrockets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("navigation")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Navigator\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("第二种方法有些类似 C#，如：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsrockets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("navigation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Navigator\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("第二种方法，可以在一个文件中定义多个包。")]),s._v(" "),t("h3",{attrs:{id:"引用包中的代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用包中的代码"}},[s._v("#")]),s._v(" 引用包中的代码")]),s._v(" "),t("p",[s._v("当我们把代码以层次关系放到包中时，它不仅仅可以帮助人们浏览代码，同时也说明了同一包中的代码具有某些相关性。Scala 可以利用这些相关性来简化代码引用，你可以使用短名称，而无需使用包的全路径来访问类定义。")]),s._v(" "),t("p",[s._v("下面我们给出三个简单的例子：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsrockets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("navigation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Navigator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" map "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" StarMap\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" StarMap\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Ship "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" nav "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" navigation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Navigator\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" fleets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Fleet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" addShip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" Ship"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("在第一个例子中，正如你可以预见的一样：访问同一包中定义的类型，无需使用前缀。直接使用类型的名称即可访问，也就是本例可以直接使用 "),t("code",[s._v("new StarMap")]),s._v("。类 "),t("code",[s._v("StarMap")]),s._v(" 和 "),t("code",[s._v("Navigator")]),s._v(" 定义在同一个包中。")]),s._v(" "),t("p",[s._v("第二个例子，嵌套的 "),t("code",[s._v("package")]),s._v(" 也可以在其父包中被同级别的其它类型直接访问，而无需使用全称。因此，第二个例子可以使用 "),t("code",[s._v("navigation")]),s._v(" 直接访问 "),t("code",[s._v("navigation")]),s._v(" 包，而无需添加 "),t("code",[s._v("bobsrockets")]),s._v("。")]),s._v(" "),t("p",[s._v("第三个例子，使用包定义的 "),t("code",[s._v("{}")]),s._v(" 语法结构时，内层的类型可以直接访问其外层定义的类型。因此，在类 "),t("code",[s._v("Fleet")]),s._v(" 中，可以直接访问外层定义的类型 "),t("code",[s._v("Ship")]),s._v("。")]),s._v(" "),t("p",[s._v("要注意的是，这种用法只适用于你明确嵌套包定义。如果你采用 Java 语言风格——一个文件定义一个包。那么你只能访问该包中定义的类型。")]),s._v(" "),t("p",[s._v("访问包定义的类型，还有一个技巧值得说明一下：比如你定义的一些类型之间可能存在相互隐藏的关系，也就是内层定义的同名类型可能会隐藏外层定义的同名类型。那么你怎么来访问外层定义的类型呢？请看下例：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("launch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Booster3\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsrockets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("navigtion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("launch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Booster1\n\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" MissionControl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" booster1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" launch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Booster1\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" booster2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" bobsrockets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("launch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Booster2\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" booster3"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" _root_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("launch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Booster3\n\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("launch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Booster2\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[s._v("如何来访问 "),t("code",[s._v("Booster1")]),s._v("、"),t("code",[s._v("Booster2")]),s._v(" 和 "),t("code",[s._v("Booster3")]),s._v(" 呢？访问 "),t("code",[s._v("Booster1")]),s._v(" 比较容易，"),t("code",[s._v("Booster2")]),s._v(" 可以通过全称来访问。那么如何访问最外层的 "),t("code",[s._v("Booster3")]),s._v(" 呢？内层的包 "),t("code",[s._v("launch")]),s._v(" 隐藏了这个外部的同名包。为解决这种情况，Scala 提供了 "),t("code",[s._v("_root_")]),s._v("，也就是所有最外层的类型都可以当成定义在 "),t("code",[s._v("_root_")]),s._v(" 包中。因此，"),t("code",[s._v("_root_.launch.Booster3")]),s._v(" 可以到访问最外层定义的类型。")]),s._v(" "),t("h4",{attrs:{id:"使用-import"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-import"}},[s._v("#")]),s._v(" 使用 import")]),s._v(" "),t("p",[s._v("和 Java 一样，Scala 也是通过 "),t("code",[s._v("import")]),s._v(" 语句引用其它包中定义的类型。类型引入后，可以使用短名称来引用该类型而无需使用全路径。要注意的 Scala 使用 “"),t("code",[s._v("_")]),s._v("” 而非 “"),t("code",[s._v("*")]),s._v("” 作为通配符。")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// easy access to Fruit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Fruit\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// easy access to all members of bobdelights")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("_\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// easy access to all member of Fruits")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Fruits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("所定义的类型在包 "),t("code",[s._v("bobsdelights")]),s._v(" 中：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" Fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" Fruits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" Apple "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Fruit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"red"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" Orange "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orange"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orange"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" Pear "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pear"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yellowish"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" menu "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" List"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Apple"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("Orange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("Pear"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("第一个为引用单个类型，第二个为按需引用。和 Java 不同的是，使用 “"),t("code",[s._v("_")]),s._v("” 代替 “"),t("code",[s._v("*")]),s._v("”，第三个类似于 Java 中的静态引用，可以直接使用 "),t("code",[s._v("Fruits")]),s._v(" 中定义的对象。")]),s._v(" "),t("p",[s._v("此外，Scala 中的 "),t("code",[s._v("import")]),s._v(" 语句的使用比较灵活，可以用在代码的任意部分，而不一定需要在文件开头定义。比如下面的 "),t("code",[s._v("import")]),s._v(" 定义在函数内部：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Fruit\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" showFruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fruit"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("Fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("_\n\n  println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s are"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("方法 "),t("code",[s._v("showFruit")]),s._v(" 引入 "),t("code",[s._v("fruit")]),s._v(" 对象（非类型）的所有成员，"),t("code",[s._v("fruit")]),s._v(" 的类型为 "),t("code",[s._v("Fruit")]),s._v("。因此，可以在函数直接使用 "),t("code",[s._v("fruit")]),s._v(" 的成员变量，而无需使用 "),t("code",[s._v("fruit")]),s._v(" 限定符。这个方法和下面代码是等价的：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Fruit\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" showFruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fruit"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("Fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s are"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("和 Java 相比，Scala 的 "),t("code",[s._v("import")]),s._v(" 的使用更加灵活：")]),s._v(" "),t("ul",[t("li",[s._v("可以出现在文件中任何地方。")]),s._v(" "),t("li",[s._v("可以 import 对象（singleton 或者普通对象）和 package 本身。")]),s._v(" "),t("li",[s._v("支持对引入的对象重命名或者隐藏某些类型。")])]),s._v(" "),t("p",[s._v("下面的例子直接引入包名称，而非包中成员。引入包后，可以使用相对名称来指代某个类型。")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("regex")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" AStarB "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" pat "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" regex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("compile"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a*b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("code",[s._v("import")]),s._v(" 也可以用来重命名或者隐藏某些类型，比如：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Fruits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Apple"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("Orange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("仅仅引用 "),t("code",[s._v("Fruits")]),s._v(" 中的 "),t("code",[s._v("Apple")]),s._v(" 和 "),t("code",[s._v("Orangle")]),s._v(" 类型。")]),s._v(" "),t("p",[s._v("下面的例子使用 "),t("code",[s._v("=>")]),s._v(" 重命名类型：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Fruits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Apple "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" MaIntosh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("Orange"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("同样重命名也可以重新定义包名称，比如：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("sql "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" S"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将引入的包 "),t("code",[s._v("java.sql")]),s._v(" 改名为 "),t("code",[s._v("java.S")]),s._v("，因此可以使用 "),t("code",[s._v("S.Date")]),s._v(" 来代替 "),t("code",[s._v("sql.Date")]),s._v("。")]),s._v(" "),t("p",[s._v("如果需要隐藏某个类型，可以使用 "),t("code",[s._v("Type => _")]),s._v(" 将某个类型改名为"),t("code",[s._v("_")]),s._v("，就可以达到隐藏某个类型的效果。比如：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Fruits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Apple "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" _"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这个引用中，引入了 "),t("code",[s._v("Fruits")]),s._v(" 中除 "),t("code",[s._v("Apple")]),s._v(" 之外的其它类型。")]),s._v(" "),t("h4",{attrs:{id:"隐含的-import"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#隐含的-import"}},[s._v("#")]),s._v(" 隐含的 import")]),s._v(" "),t("p",[s._v("Scala 默认为每个文件添加如下几个 "),t("code",[s._v("package")]),s._v("。这几个包无需明确指明。")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lang"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("_   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// everything in the java.lang package")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("scala"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("_       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// everything in the scala package")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Predef"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// everything in the Predef object")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("因此在写 Scala 应用之前，先了解下这些缺省包定义了哪些类和功能。")]),s._v(" "),t("p",[s._v("此外这三个包的顺序也需要了解一下，比如："),t("code",[s._v("StringBuilder")]),s._v(" 类定义在包 "),t("code",[s._v("scala")]),s._v(" 和包 "),t("code",[s._v("java.lang")]),s._v(" 中，后定义的 "),t("code",[s._v("import")]),s._v(" 会覆盖前面的定义。因此，如果不明确指明，"),t("code",[s._v("StringBuilder")]),s._v(" 为 "),t("code",[s._v("scala.StringBuilder")]),s._v(" 而非 "),t("code",[s._v("java.lang.StringBuilder")]),s._v("。")]),s._v(" "),t("p",[s._v("注意这里的 "),t("code",[s._v("scala._")]),s._v(" 指所有 "),t("code",[s._v("scala")]),s._v(" 下的包，包括子包。你可以在 "),t("a",{attrs:{href:"http://www.scala-lang.org/files/archive/api/2.10.3/#package",target:"_blank",rel:"noopener noreferrer"}},[s._v("Scala 的官方文档"),t("OutboundLink")],1),s._v("中查看到它们的全部信息，如下图所示。")]),s._v(" "),t("p",[t("img",{attrs:{src:"document-uid162034labid1684timestamp1454419831534.png",alt:"13-3.2-1"}})]),s._v(" "),t("p",[t("code",[s._v("Predef")]),s._v(" 为一对象（非包名），因此可以直接使用 "),t("code",[s._v("Predef")]),s._v(" 对象定义的方法（静态引用）。在写代码之前了解下 "),t("code",[s._v("scala")]),s._v(" 包和 "),t("code",[s._v("Predef")]),s._v(" 定义的功能尤其重要。")]),s._v(" "),t("h3",{attrs:{id:"包对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包对象"}},[s._v("#")]),s._v(" 包对象")]),s._v(" "),t("p",[s._v("到目前为止，我们看到的添加到包的都是类型、"),t("code",[s._v("Trait")]),s._v(" 和单例对象（"),t("code",[s._v("Object")]),s._v("）。这些都是指包的定级层次定义的类型。")]),s._v(" "),t("p",[s._v("Scala 的定级层次除了可以定义类、"),t("code",[s._v("Trait")]),s._v("、"),t("code",[s._v("Object")]),s._v("之外，其它的可以在类、"),t("code",[s._v("Trait")]),s._v("、"),t("code",[s._v("Object")]),s._v(" 内部定义的类型，也都可以直接定义在包中。比如一些通用的函数、变量，你都可以直接定义在包中。")]),s._v(" "),t("p",[s._v("在 Scala 中，可以把这些函数或方法放在一个称为“包对象”中。每个包只有一个包对象，任何放在包对象的类型都可以认为是包自身的成员。例如：")]),s._v(" "),t("div",{staticClass:"language-scala line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-scala"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// in file bobsdelights/package.scala")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("object")]),s._v(" bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" showFruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fruit"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("_\n    println"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s are "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// in file PrintMenu.scala")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("printmenu")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Fruits\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("bobsdelights"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("showFruit")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("object")]),s._v(" PrintMenu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" main"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("Array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fruit "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("<-")]),s._v(" Fruits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("menu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      showFruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fruit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("本例中，对象 "),t("code",[s._v("PrintMenu")]),s._v(" 可以引入包对象中定义的函数 "),t("code",[s._v("showFruit")]),s._v("，方法和引入类定义一样，也是通过 "),t("code",[s._v("import")]),s._v(" 语句。")]),s._v(" "),t("p",[s._v("包对象通常被编译为 "),t("code",[s._v("package.class")]),s._v("，其包名为定义的包。所以按照惯例一般包对象定义放在 "),t("code",[s._v("package.scala")]),s._v(" 中。比如，上面的包对象可以放在 "),t("code",[s._v("bobsdelights")]),s._v(" 目录下的 "),t("code",[s._v("package.scala")]),s._v(" 中。")])])}),[],!1,null,null,null);a.default=e.exports}}]);