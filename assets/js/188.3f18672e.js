(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{1444:function(s,n,a){"use strict";a.r(n);var e=a(24),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"实验介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验介绍"}},[s._v("#")]),s._v(" 实验介绍")]),s._v(" "),a("p",[s._v("Spring Security 是一个非常强大的身份验证和授权控制框架。为了满足企业项目的不同需求，它提供了很多定制化开发的解决方案，通过简单的调整配置，就能为我们的应用提供一套可靠的安全保障。本节课程主要任务就是搞清楚 Spring Security 是干什么的，以及它的基本用法。")]),s._v(" "),a("h4",{attrs:{id:"知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[s._v("#")]),s._v(" 知识点")]),s._v(" "),a("ul",[a("li",[s._v("系统安全和系统保护设计")]),s._v(" "),a("li",[s._v("Spring Security 核心功能介绍")]),s._v(" "),a("li",[s._v("Spring Security 项目搭建")]),s._v(" "),a("li",[s._v("Spring Security 的基本操作")])]),s._v(" "),a("h2",{attrs:{id:"系统安全和系统保护设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统安全和系统保护设计"}},[s._v("#")]),s._v(" 系统安全和系统保护设计")]),s._v(" "),a("p",[s._v("在实际开发过程中，为了保证我们的系统能够安全稳定的运行下去，一般都要从下面两点来考虑：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("系统安全性")]),s._v("：防止非法入侵、非法请求、非法拦截等。我们需要阻止和屏蔽不信任的请求源访问，保证数据的安全可靠，不被人窃取。")]),s._v(" "),a("li",[a("strong",[s._v("系统健壮性")]),s._v("：也就是系统可用性，最常见的解决方案就是做服务 “冗余”。当然量级够大的话，要做的事情会很多很多，比如限流、熔断、降级等等。")])]),s._v(" "),a("p",[s._v("这里只简单的谈一谈系统的安全性，在项目的开发中需要从全方位、多角度做工作，以确保整个业务链路、整个体系范围都能保证安全。下面就大致介绍下在实际开发过程中，开发者经常用到的一些方法：")]),s._v(" "),a("ul",[a("li",[s._v("数据校验，包括前端 js 校验和后端校验，其实前端校验主要是为了体验，也就是尽可能降低出错率，提高一次性提交的成功率。也可以说前端校验规则是后端校验的子集。")]),s._v(" "),a("li",[s._v("防止命令注入，比如最常见的 SQL 注入，它不是利用操作系统的 BUG 来实现攻击，而是针对程序员编程时的疏忽，通过 SQL 语句，实现无帐号登录，甚至篡改数据库。")]),s._v(" "),a("li",[s._v("认证安全，对于使用应用的实体，无论是人还是系统程序，都应当做到对每个请求都能找到对应的责任实体。因此，在处理请求前，要先对认证信息进行检测。")]),s._v(" "),a("li",[s._v("登录鉴权，即要控制这个用户登录后能在系统中做什么，比如一般要把用户分为外部用户、员工等。")]),s._v(" "),a("li",[s._v("数据加密，对于敏感数据，不得明文传输和明文存储。如数据存储中，密码等信息我们可以加密后再存储；数据传输中，对密文使用 DES3/RSA 加密。")]),s._v(" "),a("li",[s._v("请求签名，在外部请求时也是常见的处理方式，只有通过接口签名验证的请求，才信任为合法的请求。")])]),s._v(" "),a("p",[s._v("在系统的安全方面，我们的 Spring Security 框架，解决的最主要的问题就是 "),a("strong",[s._v("认证安全")]),s._v(" 和 "),a("strong",[s._v("登录鉴权")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"spring-security-核心功能介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-security-核心功能介绍"}},[s._v("#")]),s._v(" Spring Security 核心功能介绍")]),s._v(" "),a("p",[s._v("Spring Security 其核心就是一组过滤器链，项目启动后将会自动配置。最核心的就是 Basic Authentication Filter 用来认证用户的身份，一个在 Spring Security 中一种过滤器处理一种认证方式。比如，对于 username password 认证过滤器来说：")]),s._v(" "),a("ul",[a("li",[s._v("会检查是否是一个登录请求；")]),s._v(" "),a("li",[s._v("是否包含 username 和 password （也就是该过滤器需要的一些认证信息）；")]),s._v(" "),a("li",[s._v("如果不满足则放行给下一个。")])]),s._v(" "),a("p",[s._v("然后下一个认证过滤器，再次按照自身职责判定是否是自身需要的信息。中间可能还有更多的认证过滤器，只要有一个认证过滤器通过了，就是用户登录成功。")]),s._v(" "),a("p",[s._v("在整个过滤器中的最后一环是 "),a("code",[s._v("FilterSecurityInterceptor")]),s._v("，这里会判定该请求是否能进行访问 REST 服务，如果被拒绝了就会抛出不同的异常（根据具体的原因）。"),a("code",[s._v("Exception Translation Filter")]),s._v(" 会捕获抛出的错误，然后根据不同的认证方式进行信息的返回提示。")]),s._v(" "),a("h2",{attrs:{id:"项目搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目搭建"}},[s._v("#")]),s._v(" 项目搭建")]),s._v(" "),a("p",[s._v("概念一下说多了也未必好理解，还是先上手，后面再慢慢熟悉比较好。打开实验楼环境，依次点击 Terminal --\x3e New Terminal（打开命令行），可以看到下方出现命令行工具，创建我们的第一个项目（"),a("code",[s._v("hello_security")]),s._v("），直接输入下面的命令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("mvn archetype:generate -DgroupId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("com.shiyanlou -DartifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hello_security -DarchetypeArtifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("maven-archetype-webapp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529255016",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("输入完，然后直接回车即可自动创建项目。我们创建一个基于 Spring Boot 的 Web 项目，maven 全部依赖如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("hello_security/pom.xml\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-parent</artifactId>\n            <version>2.0.8.RELEASE</version>\n            <scope>import</scope>\n            <type>pom</type>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependencies>\n    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>3.8.1</version>\n        <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-thymeleaf</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n</dependencies>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529270736",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("这个项目就是个简单的 Spring Boot 项目，先把需要的目录创建好，按照下面的目录结构创建出来：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201213-1607853144179",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("也就是在 "),a("code",[s._v("src/main/")]),s._v(" 下创建 "),a("code",[s._v("java")]),s._v(" 目录，再在其下面创建 "),a("code",[s._v("com/shiyanlou")]),s._v(" 包目录，同时在该目录下创建我们的 Spring Boot 启动类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("hello_security/src/main/java/com/shiyanlou/Application.java\npackage com.shiyanlou;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("再在 "),a("code",[s._v("src/main/resources/")]),s._v(" 下创建 "),a("code",[s._v("templates")]),s._v(" 目录，然后在 "),a("code",[s._v("src/main/resources/templates")]),s._v(" 目录下创建两个页面：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('home.html\n<!DOCTYPE html>\n<html\n  xmlns="http://www.w3.org/1999/xhtml"\n  xmlns:th="http://www.thymeleaf.org"\n  xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity3"\n>\n  <head>\n    <title>home.html</title>\n  </head>\n  <body>\n    <h1>Welcome!</h1>\n    <p>\n      Click\n      <a th:href="@{/hello}">here</a>\n      to see a greeting.\n    </p>\n  </body>\n</html>\nhello.html\n<!DOCTYPE html>\n<html\n  xmlns="http://www.w3.org/1999/xhtml"\n  xmlns:th="http://www.thymeleaf.org"\n  xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity3"\n>\n  <head>\n    <title>hello.html</title>\n  </head>\n  <body>\n    <h1>Hello world!</h1>\n  </body>\n</html>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("p",[s._v("页面很简单，要做的事也很简单：点击 "),a("code",[s._v("home")]),s._v(" 视图中的 "),a("code",[s._v("“/hello”")]),s._v(" 链接跳转到 "),a("code",[s._v("hello")]),s._v(" 页面。首先配置视图控制器来暴露这些页面， 如下是一个典型的 Spring MVC 配置类：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/MvcConfig.java\npackage com.shiyanlou;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n\n  public void addViewControllers(ViewControllerRegistry registry) {\n    registry.addViewController("/home").setViewName("home");\n    registry.addViewController("/").setViewName("home");\n    registry.addViewController("/hello").setViewName("hello");\n    registry.addViewController("/login").setViewName("login");\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("第四个视图控制器引用另一个名为 "),a("code",[s._v("login")]),s._v(" 的视图，后面会用上，先不管。现在可以启动项目了，这里注意，在实验楼 WebIDE 中运行项目需要命令行启动，必须在 pom.xml 中添加 maven 插件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/pom.xml\n<?xml version="1.0" encoding="UTF-8"?>\n<project\n  xmlns="http://maven.apache.org/POM/4.0.0"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"\n>\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.shiyanlou</groupId>\n  <artifactId>hello_security</artifactId>\n  <version>1.0-SNAPSHOT</version>\n\n  <build>\n    <plugins>\n      \x3c!--spring boot 打包插件--\x3e\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n        <configuration>\n          <mainClass>com.shiyanlou.Application</mainClass>\n        </configuration>\n        <executions>\n          <execution>\n            <goals>\n              <goal>repackage</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("p",[s._v("同时命令行中切换到自己的项目目录下（和 pom.xml 同级），再执行 "),a("code",[s._v("mvn spring-boot:run")]),s._v(" 命令：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201213-1607852684088",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("等项目启动完成后，点击右侧菜单的 "),a("strong",[s._v("Web 服务")]),s._v(" 按钮，将会自动打开浏览器，看到下面的运行效果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529358457",alt:"第一次运行项目"}})]),s._v(" "),a("h2",{attrs:{id:"加入-spring-security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加入-spring-security"}},[s._v("#")]),s._v(" 加入 Spring Security")]),s._v(" "),a("p",[s._v("此时，如果用户点击主页上的链接，他们会看到问候语，请求没有被拦截。现在你需要添加一个障碍，使得用户在看到该页面之前先登录。显然，可以通过 Spring Security 来实现。首先在 pom.xml 文件中加入 Spring Security 的依赖：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("hello_security/pom.xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("然后通过 Spring Security 进行安全配置，使得只有认证过的用户才可以访问到问候页面。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/WebSecurityConfig.java\npackage com.shiyanlou;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http\n      .authorizeRequests()\n      .antMatchers("/", "/home")\n      .permitAll()\n      .anyRequest()\n      .authenticated()\n      .and()\n      .formLogin()\n      .loginPage("/login")\n      .permitAll()\n      .and()\n      .logout()\n      .permitAll();\n  }\n\n  @Autowired\n  public void configureGlobal(AuthenticationManagerBuilder auth)\n    throws Exception {\n    auth\n      .inMemoryAuthentication()\n      .passwordEncoder(new BCryptPasswordEncoder())\n      .withUser("user")\n      .password(new BCryptPasswordEncoder().encode("123456"))\n      .roles("USER");\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201213-1607852096271",alt:"图片描述"}})]),s._v(" "),a("p",[a("code",[s._v("WebSecurityConfig")]),s._v(" 类使用了 "),a("code",[s._v("@EnableWebSecurity")]),s._v(" 注解 ，以启用 Spring Security 的 Web 安全支持，并提供 Spring MVC 集成。它还扩展了 "),a("code",[s._v("WebSecurityConfigurerAdapter")]),s._v("，并覆盖了一些方法来设置 Web 安全配置的一些细节。")]),s._v(" "),a("p",[a("code",[s._v("configure(HttpSecurity)")]),s._v(" 方法定义了哪些 URL 路径应该被保护，哪些不应该。具体来说，"),a("code",[s._v("“/”")]),s._v(" 和 "),a("code",[s._v("“/home”")]),s._v(" 路径被配置为不需要任何身份验证。所有其他路径必须经过身份验证。 当用户成功登录时，它们将被重定向到先前请求的需要身份认证的页面。有一个由 "),a("code",[s._v("loginPage()")]),s._v(" 指定的自定义登录页面，每个人都可以查看它。")]),s._v(" "),a("p",[s._v("对于 "),a("code",[s._v("configureGlobal(AuthenticationManagerBuilder)")]),s._v(" 方法，它将单个用户设置在内存中。该用户的用户名为 "),a("code",[s._v("“user”")]),s._v("，密码为 "),a("code",[s._v("“123456”")]),s._v("，角色为 "),a("code",[s._v("“USER”")]),s._v("。")]),s._v(" "),a("p",[s._v("现在就差个登录页面了，前面我们已经配置了 "),a("code",[s._v("“login”")]),s._v(" 的视图控制器，因此现在只需要创建登录页面 "),a("code",[s._v("login.html")]),s._v(" 即可：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/resources/templates/login.html\n<!DOCTYPE html>\n<html\n  xmlns="http://www.w3.org/1999/xhtml"\n  xmlns:th="http://www.thymeleaf.org"\n  xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity3"\n>\n  <head>\n    <title>Spring Security Example</title>\n  </head>\n  <body>\n    <div th:if="${param.error}">Invalid username and password.</div>\n    <div th:if="${param.logout}">You have been logged out.</div>\n    <form th:action="@{/login}" method="post">\n      <div>\n        <label>\n          User Name :\n          <input type="text" name="username" />\n        </label>\n      </div>\n      <div>\n        <label>\n          Password:\n          <input type="password" name="password" />\n        </label>\n      </div>\n      <div><input type="submit" value="Sign In" /></div>\n    </form>\n  </body>\n</html>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("p",[s._v("重新启动项目，再来看看效果如何：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529403503",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("你可以看到，这个页面只提供了一个表单来获取用户名和密码，并将它们提交到 "),a("code",[s._v("“/login”")]),s._v("。 根据配置，Spring Security 提供了一个拦截该请求并验证用户的过滤器。 如果用户未通过认证，该页面将重定向到 "),a("code",[s._v("“/login?error”")]),s._v("，并在页面显示相应的错误消息。")]),s._v(" "),a("h2",{attrs:{id:"用户注销"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户注销"}},[s._v("#")]),s._v(" 用户注销")]),s._v(" "),a("p",[s._v("再来实现一个小功能——用户注销，其实上面 Spring Security 的安全配置中，"),a("code",[s._v("logout()")]),s._v(" 方法就是用户注销功能。注销成功后，应用程序会默认跳转到 "),a("code",[s._v("“/login?logout”")]),s._v("，刚好对于我们的登录页面。")]),s._v(" "),a("p",[s._v("修改下 "),a("code",[s._v("hello.html")]),s._v(" 页面，向当前用户打印一句 hello，并包含一个 "),a("code",[s._v("“Sign Out”")]),s._v(" 链接：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/resources/hello.html\n<h1 th:inline="text">Hello [[${#httpServletRequest.remoteUser}]]!</h1>\n<form th:action="@{/logout}" method="post">\n  <input type="submit" value="Sign Out" />\n</form>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("没了，重启一下项目，再次运行看看效果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529414603",alt:"图片描述"}})]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("最后可能有人会想为啥直接跳转到 "),a("code",[s._v("/logout")]),s._v(" 上去，就算注销成功了。原因很简单，因为 Spring Security 默认都帮你实现了，这个框架默认实现了很多东西，这样好处就是入门很快。坏处也显然，刚上手的时候可能就是感觉莫名其妙的把功能实现了，具体怎么实现的完全不知道。结果就是好多人都知道个大概，但是想真正用到项目里又不知道怎么下手了，动不动就碰到一堆问题。本节只是对 Spring Security 有个初步的概念，下节就对它整个的认证流程进行详细的讲解。")]),s._v(" "),a("p",[s._v("本节代码下载地址为：https://labfile.oss.aliyuncs.com/courses/3013/code1.zip")])])}),[],!1,null,null,null);n.default=t.exports}}]);