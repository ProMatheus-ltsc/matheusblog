(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{1432:function(s,t,a){"use strict";a.r(t);var n=a(24),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"第一个单元测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一个单元测试"}},[s._v("#")]),s._v(" 第一个单元测试")]),s._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#实验介绍"}},[s._v("实验介绍")]),n("ul",[n("li",[n("a",{attrs:{href:"#实验知识点"}},[s._v("实验知识点")])]),n("li",[n("a",{attrs:{href:"#代码获取"}},[s._v("代码获取")])])])]),n("li",[n("a",{attrs:{href:"#实验步骤"}},[s._v("实验步骤")]),n("ul",[n("li",[n("a",{attrs:{href:"#项目结构"}},[s._v("项目结构")])]),n("li",[n("a",{attrs:{href:"#add-java"}},[s._v("Add.java")])]),n("li",[n("a",{attrs:{href:"#手动测试"}},[s._v("手动测试")])]),n("li",[n("a",{attrs:{href:"#使用-junit-进行测试"}},[s._v("使用 JUnit 进行测试")])])])]),n("li",[n("a",{attrs:{href:"#关于测试中的断言"}},[s._v("关于测试中的断言")])]),n("li",[n("a",{attrs:{href:"#实验总结"}},[s._v("实验总结")])])])]),n("p"),s._v(" "),n("h2",{attrs:{id:"实验介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验介绍"}},[s._v("#")]),s._v(" 实验介绍")]),s._v(" "),n("p",[s._v("本节实验将编写一个简单的单元测试用例，并看一看使用单元测试和不使用单元测试的区别。")]),s._v(" "),n("h3",{attrs:{id:"实验知识点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验知识点"}},[s._v("#")]),s._v(" 实验知识点")]),s._v(" "),n("ul",[n("li",[s._v("如何编写单元测试")]),s._v(" "),n("li",[s._v("使用单元测试和直接测试的区别")])]),s._v(" "),n("h3",{attrs:{id:"代码获取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码获取"}},[s._v("#")]),s._v(" 代码获取")]),s._v(" "),n("p",[s._v("你可以通过下面命令将本次实验中的源代码下载到环境中，作为参照对比进行学习。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /home/shiyanlou/eclipse-workspace\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://labfile.oss.aliyuncs.com/courses/1855/20.zip\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(".zip\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("blockquote",[n("p",[s._v("注意以上压缩文件中包含整个 Eclipse Java 项目，解压后需要将整个项目导入到 Eclipse 下才能使用。另外为了便于检测代码，项目存放位置必须位于 Eclipse 默认工作目录下，即 "),n("code",[s._v("/home/shiyanlou/eclipse-workspace/")]),s._v("。")])]),s._v(" "),n("h2",{attrs:{id:"实验步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验步骤"}},[s._v("#")]),s._v(" 实验步骤")]),s._v(" "),n("h3",{attrs:{id:"项目结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目结构"}},[s._v("#")]),s._v(" 项目结构")]),s._v(" "),n("p",[s._v("首先展示本次实验的项目结构。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(458),alt:"img"}})]),s._v(" "),n("p",[s._v("接下来学习如何进行单元测试，使用的 JUnit 版本为 "),n("code",[s._v("JUnit 5")]),s._v("。首先打开 Eclipse，创建一个 Java 项目"),n("code",[s._v("JunitTest")]),s._v("。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(459),alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"add-java"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-java"}},[s._v("#")]),s._v(" Add.java")]),s._v(" "),n("p",[s._v("在 "),n("code",[s._v("src")]),s._v(" 目录下创建类 "),n("code",[s._v("Add.java")]),s._v("，在其中编写一个 Add 方法，用于将参数 "),n("code",[s._v("a,b")]),s._v(" 的值相加并且返回结果。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Add")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"手动测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动测试"}},[s._v("#")]),s._v(" 手动测试")]),s._v(" "),n("p",[s._v("编写好方法后一般会测试这个方法能不能行得通，在不使用 JUnit 的情况下，一般使用如下的方法进行测试。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Add")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Add")]),s._v(" add "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Test pass"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Test fail"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("手动测试需要新建一个实例，并且调用对应的方法，然后对结果进行比较判断，最后输出测试结果。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(460),alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"使用-junit-进行测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-junit-进行测试"}},[s._v("#")]),s._v(" 使用 JUnit 进行测试")]),s._v(" "),n("p",[s._v("创建一个 JUnit 测试类 "),n("code",[s._v("AddTest.java")]),s._v("，具体操作为：首先选择 "),n("code",[s._v("src")]),s._v(" 目录，在 Eclipse 顶部菜单选择 "),n("code",[s._v("File->New->JUnit Test Case")]),s._v("。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(461),alt:"img"}})]),s._v(" "),n("p",[s._v("选择 "),n("code",[s._v("Junit Test Case")]),s._v("，创建一个测试用例 "),n("code",[s._v("AddTest")]),s._v("。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(462),alt:"img"}})]),s._v(" "),n("p",[s._v("Eclipse 会提示是否添加 JUnit 5 的 jar 到项目中，选择 "),n("code",[s._v("ok")]),s._v("。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(463),alt:"img"}})]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("junit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jupiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeforeAll")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("junit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jupiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import static"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("junit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jupiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Assertions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token static"}},[s._v("assertEquals")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AddTest")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Add")]),s._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@BeforeAll")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在所有测试方法运行前运行，并且只能修饰静态方法（除非修改测试实例生命周期）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setUp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        add "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//表示这是个测试方法")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//断言相等，比较2和add.add(1,1)的返回值是否相等")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("接着运行测试方法，测试结果如图所示。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(464),alt:"img"}})]),s._v(" "),n("p",[s._v("可以看到 Eclipse 的控制台自动打印出了相关信息，包括运行的测试用例的总数，测试成功数量，测试失败数量，并且可以快速的定位到测试方法，方便进行修改。可以看到单元测试和手动测试相比要简单快捷不少。")]),s._v(" "),n("h2",{attrs:{id:"关于测试中的断言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于测试中的断言"}},[s._v("#")]),s._v(" 关于测试中的断言")]),s._v(" "),n("p",[s._v("在执行测试时，应该使用"),n("strong",[s._v("断言")]),s._v("对测试结果进行预判，而不是使用输出语句结合肉眼观察结果，这样才更符合自动化测试的标准（在自动化测试中，可以一键执行项目中的所有测试方法，并将测试结果汇总到专门的测试报告文件中）。")]),s._v(" "),n("p",[s._v("通过调用"),n("code",[s._v("Assertions")]),s._v("类中的静态方法可以对结果进行断言，常用方法有：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("assertEquals()")]),s._v("：断言匹配（相等）")]),s._v(" "),n("li",[n("code",[s._v("assertNotEquals()")]),s._v("：断言不匹配（不相等）")]),s._v(" "),n("li",[n("code",[s._v("assertTrue()")]),s._v("：断言为“真”")]),s._v(" "),n("li",[n("code",[s._v("assertFalse()")]),s._v("：断言为“假”")]),s._v(" "),n("li",[n("code",[s._v("assertNull()")]),s._v("：断言为"),n("code",[s._v("null")])]),s._v(" "),n("li",[n("code",[s._v("assertNotNull()")]),s._v("：断言不为"),n("code",[s._v("null")])]),s._v(" "),n("li",[n("code",[s._v("assertThrows()")]),s._v("：断言将抛出异常")]),s._v(" "),n("li",[n("code",[s._v("assertDoesNotThrow()")]),s._v("：断言不会抛出异常")]),s._v(" "),n("li",[s._v("其它")])]),s._v(" "),n("h2",{attrs:{id:"实验总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验总结"}},[s._v("#")]),s._v(" 实验总结")]),s._v(" "),n("p",[s._v("本节实验我们学习到了如何在 Eclipse 中创建一个单元测试，以及如何运行和查看单元测试结果。相比手动创建实例、编写测试代码，使用 JUnit 用例编写更为方便快捷，而且获得的测试反馈更为详细，由此可以感受到 JUnit 在单元测试中的优势。")]),s._v(" "),n("h4",{attrs:{id:"参考链接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://junit.org/junit5/docs/current/user-guide/",target:"_blank",rel:"noopener noreferrer"}},[s._v("JUnit5 官方文档"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports},458:function(s,t,a){s.exports=a.p+"assets/img/document-uid441493labid8079timestamp1537867313187.9deb6fec.png"},459:function(s,t,a){s.exports=a.p+"assets/img/ffbe32505abfb08ba7c4d913886c1f01-0.1b68e8a8.png"},460:function(s,t,a){s.exports=a.p+"assets/img/d2e5272e4c047beeb0a7d55e1f74310a-0.0778306c.png"},461:function(s,t,a){s.exports=a.p+"assets/img/85cfaff5b413e80fa37c1c3d7473109b-0.b2074406.png"},462:function(s,t,a){s.exports=a.p+"assets/img/dc02294123996255eb1ad897562e5ce9-0.d1ec0cfe.png"},463:function(s,t,a){s.exports=a.p+"assets/img/084d044beacbfc5614bf854be3c19ea7-0.7de603d5.png"},464:function(s,t,a){s.exports=a.p+"assets/img/d88a9679fd22bff0e23e5453f0d2510a-0.541f1200.png"}}]);