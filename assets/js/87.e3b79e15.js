(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{1094:function(a,s,t){a.exports=t.p+"assets/img/document-uid702660labid6307timestamp1525416596329-165425937406328.4d3b65e9.png"},1095:function(a,s,t){a.exports=t.p+"assets/img/document-uid702660labid6310timestamp1525425822990.dfb32eea.png"},1096:function(a,s,t){a.exports=t.p+"assets/img/document-uid702660labid6310timestamp1525425844215.7e63d14c.png"},1097:function(a,s,t){a.exports=t.p+"assets/img/document-uid702660labid6310timestamp1525426620973.c2f13f8a.png"},1698:function(a,s,t){"use strict";t.r(s);var n=t(24),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"类和对象-一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类和对象-一"}},[a._v("#")]),a._v(" 类和对象(一)")]),a._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#实验介绍"}},[a._v("实验介绍")])]),n("li",[n("a",{attrs:{href:"#开发准备"}},[a._v("开发准备")])]),n("li",[n("a",{attrs:{href:"#实验步骤"}},[a._v("实验步骤")]),n("ul",[n("li",[n("a",{attrs:{href:"#类和对象的定义"}},[a._v("类和对象的定义")])]),n("li",[n("a",{attrs:{href:"#对象"}},[a._v("对象")])])])])])]),n("p"),a._v(" "),n("h2",{attrs:{id:"实验介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验介绍"}},[a._v("#")]),a._v(" 实验介绍")]),a._v(" "),n("h4",{attrs:{id:"实验内容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验内容"}},[a._v("#")]),a._v(" 实验内容")]),a._v(" "),n("p",[a._v("有了前面的 Scala 基础，从本课程开始由浅到易逐步介绍 Scala 编程的各个方面。本课程可能不会面面俱到，但仍然希望学习此课程的同学有些编程基础，尤其是有些面向对象的编程基础，如 Java、C++、C# 等更好。")]),a._v(" "),n("p",[a._v("除支持函数化编程外，Scala 也是一个纯面向对象的编程语言。本课程将介绍 Scala 的类和对象。")]),a._v(" "),n("h4",{attrs:{id:"实验知识点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验知识点"}},[a._v("#")]),a._v(" 实验知识点")]),a._v(" "),n("ul",[n("li",[a._v("类和对象的定义")]),a._v(" "),n("li",[a._v("对象详解")])]),a._v(" "),n("h4",{attrs:{id:"实验环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验环境"}},[a._v("#")]),a._v(" 实验环境")]),a._v(" "),n("ul",[n("li",[a._v("Scala")]),a._v(" "),n("li",[a._v("Xfce 终端")])]),a._v(" "),n("h4",{attrs:{id:"适合人群"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#适合人群"}},[a._v("#")]),a._v(" 适合人群")]),a._v(" "),n("p",[a._v("本课程难度为一般，属于初级级别课程，适合零基础或具有 Java 编程基础的用户。")]),a._v(" "),n("h2",{attrs:{id:"开发准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开发准备"}},[a._v("#")]),a._v(" 开发准备")]),a._v(" "),n("p",[a._v("为了使用交互式 Scala 解释器，你可以在打开的终端中输入命令：")]),a._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[a._v("su "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("l hadoop # 密码为 hadoop\nscala\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("p",[a._v("当出现 "),n("code",[a._v("scala>")]),a._v(" 开始的命令行提示符时，就说明你已经成功进入解释器了。如下图所示。")]),a._v(" "),n("blockquote",[n("p",[a._v("注意：由于在线实验环境的限制，在 Spark shell 中运行代码会稍微慢一点点")])]),a._v(" "),n("p",[n("img",{attrs:{src:t(1094),alt:"1-2.1-1"}})]),a._v(" "),n("h2",{attrs:{id:"实验步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实验步骤"}},[a._v("#")]),a._v(" 实验步骤")]),a._v(" "),n("h3",{attrs:{id:"类和对象的定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类和对象的定义"}},[a._v("#")]),a._v(" 类和对象的定义")]),a._v(" "),n("p",[a._v("首先介绍 Scala 的类定义，我们以一个简单的例子开始，创建一个计算整数累计校验和的类 "),n("code",[a._v("ChecksumAccumulator")]),a._v("。")]),a._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" ChecksumAccumulator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Unit")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" b\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" checksum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("~")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("0xFF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1095),alt:"3-3.1-1"}})]),a._v(" "),n("p",[a._v("可以看到 Scala 类定义和 Java 非常类似，也是以 "),n("code",[a._v("class")]),a._v(" 开始，和 Java 不同的，Scala 的缺省修饰符为"),n("code",[a._v("public")]),a._v("，也就是如果不带有访问范围的修饰符 "),n("code",[a._v("public")]),a._v("、"),n("code",[a._v("protected")]),a._v("、"),n("code",[a._v("private")]),a._v(" 等，Scala 将默认定义为 "),n("code",[a._v("public")]),a._v("。类的方法以 "),n("code",[a._v("def")]),a._v(" 定义开始，要注意的是 Scala 的方法的参数都是 "),n("code",[a._v("val")]),a._v("类型，而不是 "),n("code",[a._v("var")]),a._v(" 类型，因此在函数体内不可以修改参数的值，比如：如果你修改 "),n("code",[a._v("add")]),a._v(" 方法如下：")]),a._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Unit")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      b "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n      sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" b\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("此时编译器会报错：")]),a._v(" "),n("p",[n("img",{attrs:{src:t(1096),alt:"3-3.1-2"}})]),a._v(" "),n("p",[a._v("类的方法分两种，一种是有返回值的，一种是不含返回值的，没有返回值的主要是利用代码的“副作用”，比如修改类的成员变量的值或者读写文件等。Scala 内部其实将这种函数的返回值定为 "),n("code",[a._v("Unit")]),a._v("（类同 Java 的 void 类型），对于这种类型的方法，可以省略掉 "),n("code",[a._v("=")]),a._v(" 号，因此如果你希望函数返回某个值，但忘了方法定义中的 "),n("code",[a._v("=")]),a._v("，Scala 会忽略方法的返回值，而返回 "),n("code",[a._v("Unit")]),a._v("。")]),a._v(" "),n("p",[a._v("再强调一下，Scala 代码无需使用 "),n("code",[a._v("；")]),a._v(" 结尾，也不需要使用 "),n("code",[a._v("return")]),a._v(" 返回值，函数的最后一行的值就作为函数的返回值。")]),a._v(" "),n("p",[a._v("但如果你需要在一行中书写多个语句，此时需要使用 "),n("code",[a._v("；")]),a._v(" 隔开，不过不建议这么做。你也可以把一条语句分成几行书写，Scala 编译器大部分情况下会推算出语句的结尾，不过这样也不是一个好的编码习惯。")]),a._v(" "),n("h3",{attrs:{id:"对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),n("p",[a._v("Scala 比 Java 更加面向对象，这是因为 Scala 不允许类包含静态元素（静态变量或静态方法）。在 Scala 中提供类似功能的是称为“"),n("code",[a._v("Singleton")]),a._v("（单例对象）”的对象。在 Scala 中定义 "),n("code",[a._v("Singleton")]),a._v(" 对象的方法，除了使用 "),n("code",[a._v("object")]),a._v(" 而非 "),n("code",[a._v("class")]),a._v(" 关键字外，其它方式和类定义非常类似。下面例子创建一个 "),n("code",[a._v("ChecksumAccumulator")]),a._v(" 对象：")]),a._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("object")]),a._v(" ChecksumAccumulator "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" cache "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Map "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" calculate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("contains"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" acc "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" ChecksumAccumulator\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("<-")]),a._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            acc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("toByte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" cs "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" acc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("checksum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         cache "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" cs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         cs\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br")])]),n("p",[a._v("这个对象和上一个创建的类 "),n("code",[a._v("ChecksumAccumulator")]),a._v(" 同名，这在 Scala 中把这个对象称为其同名的类的“伴侣”对象（Companion object)。如果你需要定义类的 "),n("code",[a._v("companion")]),a._v(" 对象，Scala 要求你把这两个定义放在同一个文件中。类和其 "),n("code",[a._v("companion")]),a._v(" 对象可以互相访问对方的私有成员。")]),a._v(" "),n("p",[a._v("如果你是 Java 程序员，可以把 "),n("code",[a._v("Singleton")]),a._v(" 对象看成以前 Java 定义静态成员的地方。你可以使用类似 Java 静态方法的方式调用 "),n("code",[a._v("Singleton")]),a._v(" 对象的方法，比如下面为这个例子完整的代码：")]),a._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("scala"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("collection"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mutable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Map\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" ChecksumAccumulator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Unit")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v("b\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" checksum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("~")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("0xFF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("object")]),a._v(" ChecksumAccumulator "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" cache "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Map "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" calculate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("contains"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" acc "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" ChecksumAccumulator\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" c "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("<-")]),a._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            acc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("toByte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" cs "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" acc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("checksum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         cache "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" cs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n         cs\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\nprintln "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" ChecksumAccumulator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("calculate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Welcome to Scala Chinese community"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1097),alt:"3-3.2-1"}})]),a._v(" "),n("p",[a._v("Scala 的 "),n("code",[a._v("singleton")]),a._v(" 对象不仅仅局限于作为静态对象的容器，它在 Scala 中也是头等公民，但仅仅定义 "),n("code",[a._v("Singleton")]),a._v(" 对象本身不会创建一个新的类型，你不可以使用 "),n("code",[a._v("new")]),a._v(" 再创建一个新的 "),n("code",[a._v("Singleton")]),a._v(" 对象（这也是 Singleton 名字的由来），此外和类定义不同的是，"),n("code",[a._v("singleton")]),a._v(" 对象不可以带参数。类定义参数将在后面的内容中介绍。")]),a._v(" "),n("p",[a._v("回过头来看看我们的第一个例子 “Hello World”：")]),a._v(" "),n("div",{staticClass:"language-scala line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-scala"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("object")]),a._v(" HelloWorld "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello, world!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("这是一个最简单的 Scala 程序，"),n("code",[a._v("HelloWorld")]),a._v(" 是一个 "),n("code",[a._v("Singleton")]),a._v(" 对象，它包含一个 "),n("code",[a._v("main")]),a._v(" 方法（可以支持命令行参数）。和 Java 类似，Scala 中任何 "),n("code",[a._v("Singleton")]),a._v(" 对象，如果包含 "),n("code",[a._v("main")]),a._v(" 方法，都可以作为应用的入口点。")]),a._v(" "),n("p",[a._v("在这里要说明一点的是，在 Scala 中不要求 "),n("code",[a._v("public")]),a._v(" 类定义和其文件名同名，不过使用 "),n("code",[a._v("public")]),a._v(" 类和文件同名还是有它的优点的，你可以根据个人喜好决定是否遵循 Java 文件命名风格。")]),a._v(" "),n("p",[a._v("最后提一下 Scala 的 "),n("code",[a._v("Trait")]),a._v(" 功能，Scala 的 "),n("code",[a._v("Trait")]),a._v(" 和 Java 的 "),n("code",[a._v("Interface")]),a._v(" 相比，可以有方法的实现（这里有点像抽象类，但如果是抽象类，就不会允许继承多个抽象类）。Scala 的 "),n("code",[a._v("Trait")]),a._v(" 支持类和 "),n("code",[a._v("Singleton")]),a._v(" 对象以及多个 "),n("code",[a._v("Trait")]),a._v(" 混合（使用来自这些 "),n("code",[a._v("Trait")]),a._v(" 中的方法，而不是不违反单一继承的原则）。")])])}),[],!1,null,null,null);s.default=e.exports}}]);