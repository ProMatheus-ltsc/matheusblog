(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{1453:function(s,n,a){"use strict";a.r(n);var t=a(24),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"实验介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实验介绍"}},[s._v("#")]),s._v(" 实验介绍")]),s._v(" "),a("p",[s._v("我们在上节已经初步尝试了 Spring Security 安全认证的使用，但是对它具体的认证过程还不甚了解。本节我们将会学习 Spring Security 安全认证过程中，用户信息获取和逻辑校验的处理方式。")]),s._v(" "),a("p",[s._v("上节代码下载地址为：https://labfile.oss.aliyuncs.com/courses/3013/code1.zip")]),s._v(" "),a("h4",{attrs:{id:"知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[s._v("#")]),s._v(" 知识点")]),s._v(" "),a("ul",[a("li",[s._v("用户认证逻辑")]),s._v(" "),a("li",[s._v("自定义登录流程")]),s._v(" "),a("li",[s._v("登录成功处理器")])]),s._v(" "),a("h2",{attrs:{id:"用户认证逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户认证逻辑"}},[s._v("#")]),s._v(" 用户认证逻辑")]),s._v(" "),a("p",[s._v("要进行用户认证，自然就要先获取到用户的验证信息。Spring Security 提供了 "),a("code",[s._v("UserDetailsService")]),s._v(" 接口来获取用户信息。该接口用于加载用户特定的数据，它在整个框架中作为用户 DAO 使用。该接口只需要一个只读方法，这简化了对新的数据访问策略的支持。下面来实现一个自定义的 "),a("code",[s._v("UserDetailsService")]),s._v(" （本节所有代码在上节的基础上进行）。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/MyUserDetailsService.java\npackage com.shiyanlou;\n\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Component;\n\n/**\n 自定义数据源来获取数据\n 这里只要是存在一个自定义的 UserDetailsService，那么 security 将会使用该实例进行配置\n */\n@Component\npublic class MyUserDetailsService implements UserDetailsService {\n\n\n    // 可以从任何地方获取数据\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\n        System.out.println("获取到的用户信息：" + username);\n\n        // 写死一个密码，赋予一个 admin 权限【正常应该是在数据库中查询出来】\n        return new User(username, "123456",\n                AuthorityUtils.commaSeparatedStringToAuthorityList("admin"));\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("这样就能让自定义的 "),a("code",[s._v("UserdetailsService")]),s._v(" 生效了，等会我们会在这里拿到用户数据。不过上一节中，为了测试，我们将用户设置在了内存中（"),a("code",[s._v("com.shiyanlou.WebSecurityConfig#configureGlobal")]),s._v("）。这里要把这段代码去掉：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/WebSecurityConfig.java\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    // @Autowired\n    // public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n    //     auth\n    //             .inMemoryAuthentication()\n    //             .passwordEncoder(new BCryptPasswordEncoder())\n    //             .withUser("user")\n    //             .password(new BCryptPasswordEncoder().encode("123456"))\n    //             .roles("USER");\n    // }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("然后重启项目，然后登录时报错：")]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('java.lang.IllegalArgumentException: There is no PasswordEncoder mapped for the id "null"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个异常是 Spring Security 5+ 后密码策略变更了。必须使用 PasswordEncoder 方式，也就是你存储密码的时候需要使用 "),a("code",[s._v("{noop}123456")]),s._v(" 这样的方式。这个在官网文档中有讲到，花括号里面的是 encoder id，这个支持的全部列表在以下的方法中定义：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("org.springframework.security.crypto.factory.PasswordEncoderFactories"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#createDelegatingPasswordEncoder")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("noop 对应的处理类是 "),a("code",[s._v("org.springframework.security.crypto.password.NoOpPasswordEncoder")]),s._v("，只用于测试，因为没有做任何加密功能。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201214-1607920847350",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("我们没有做用户的信息校验，只要密码输入为 "),a("code",[s._v("123456")]),s._v(" 即可。下面看看效果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529561746",alt:"图片描述"}})]),s._v(" "),a("h2",{attrs:{id:"密码加解密处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#密码加解密处理"}},[s._v("#")]),s._v(" 密码加解密处理")]),s._v(" "),a("p",[s._v("上面为了测试方便，采用的是密码非加密的方式，但是在实际应用中，用户密码都是要进行加密处理的。密码加解密使用了下面这个类：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("org.springframework.security.crypto.password.PasswordEncoder\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("要想使用，只需要提供一个实例即可，我们加到 WebSecurityConfig 类中去：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("hello_security/src/main/java/com/shiyanlou/WebSecurityConfig.java\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.context.annotation.Bean;\n\n@Bean\npublic PasswordEncoder passwordEncoder() {\n    return new BCryptPasswordEncoder();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这样在 MyUserDetailsService 中需要提供的密码就是加密后的字符串：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/MyUserDetailsService.java\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\npublic class MyUserDetailsService implements UserDetailsService {\n\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    // 可以从任何地方获取数据\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\n        System.out.println("获取到的用户信息：" + username);\n\n\n        String password = passwordEncoder.encode("123456");\n\n        return new User(username,\n                // "{noop}123456",\n                password,\n                AuthorityUtils.commaSeparatedStringToAuthorityList("admin"));\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[s._v("其框架会把提交的密码使用我们定义的 passwordEncode 加密后调用 "),a("code",[s._v("org.springframework.security.crypto.password.PasswordEncoder#matches")]),s._v(" 方法，与返回的 User 中的密码进行比对，配对正常就验证通过。效果和上面一样。")]),s._v(" "),a("h2",{attrs:{id:"处理不同类型的请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理不同类型的请求"}},[s._v("#")]),s._v(" 处理不同类型的请求")]),s._v(" "),a("p",[s._v("我们上面需要登录验证时都是统一跳转到了一个登录 html 页面上去，但是，在前后分离的情况下，都用 Ajax 来请求，肯定不能返回 html 了，一般都是给前端一个 JSON 串，让前端人员去判断处理。那么要怎么实现根据请求来判断是返回 html 内容，还是 JSON 内容呢？")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529589965",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("思路很简单，身份验证后，不再直接跳转到页面，而是跳转到 Controller 中。然后在 Controller 中就可以自己决定后续的处理逻辑。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/WebSecurityConfig.java\nprotected void configure(HttpSecurity http) throws Exception {\n    http\n        .authorizeRequests()\n        // 放过 /login\n        .antMatchers("/", "/home", "/login").permitAll()\n        .anyRequest().authenticated()\n        .and()\n        .formLogin()\n        // .loginPage("/login")\n        // 更换成自定义的一个真实存在的处理器地址\n        .loginPage("/authentication/require")\n        .permitAll()\n        .and()\n        .logout()\n        .permitAll();\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("然后实现自定义的 Controller 处理器即可。不过在处理之前，我们先在 pom.xml 中再引入一些我们后续需要的依赖：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("hello_security/pom.xml\n\x3c!--json 相关依赖--\x3e\n<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-databind</artifactId>\n</dependency>\n\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>1.2.49</version>\n</dependency>\n\n\x3c!--lombok 组件--\x3e\n<dependency>\n    <groupId>org.projectlombok</groupId>\n    <artifactId>lombok</artifactId>\n    <version>1.18.0</version>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("然后弄一个自定义响应体，默认状态码为 200：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/RestResult.java\npackage com.shiyanlou;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport java.util.List;\n\npublic class RestResult {\n\n    // 定义 jackson 对象\n    private static final ObjectMapper MAPPER = new ObjectMapper();\n    // 响应业务状态\n    private String status;\n    // 响应消息\n    private String msg;\n    // 响应中的数据\n    private Object data;\n\n    public static RestResult build(String status, String msg, Object data) {\n        return new RestResult(status, msg, data);\n    }\n\n\n    public static RestResult ok(Object data) {\n        return new RestResult(data);\n    }\n\n    public static RestResult ok() {\n        return new RestResult(null);\n    }\n\n    public RestResult() {\n\n    }\n\n    public static RestResult build(String status, String msg) {\n        return new RestResult(status, msg, null);\n    }\n\n    public RestResult(String status, String msg, Object data) {\n        this.status = status;\n        this.msg = msg;\n        this.data = data;\n    }\n\n    public RestResult(Object data) {\n        this.status = "200";\n        this.msg = "OK";\n        this.data = data;\n    }\n\n    public Boolean isOK() {\n        return this.status == "200";\n    }\n\n    /*\n     * 功能描述：将 json 结果集转化为 RestResult 对象\n     */\n    public static RestResult formatToPojo(String jsonData, Class<?> clazz) {\n\n\n        try {\n            if (clazz == null) {\n                return MAPPER.readValue(jsonData, RestResult.class);\n            }\n            JsonNode jsonNode = MAPPER.readTree(jsonData);\n            JsonNode data = jsonNode.get("data");\n            Object obj = null;\n            if (clazz != null) {\n                if (data.isObject()) {\n                    obj = MAPPER.readValue(data.traverse(), clazz);\n                } else if (data.isTextual()) {\n                    obj = MAPPER.readValue(data.asText(), clazz);\n                }\n            }\n            return build(jsonNode.get("status").asText(), jsonNode.get("msg").asText(), obj);\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    /*\n     * 功能描述：没有 object 对象的转化\n     */\n    public static RestResult format(String json) {\n        try {\n            return MAPPER.readValue(json, RestResult.class);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    /*\n     * 功能描述：Object 是集合转化\n     */\n    public static RestResult formatToList(String jsonData, Class<?> clazz) {\n        try {\n            JsonNode jsonNode = MAPPER.readTree(jsonData);\n            JsonNode data = jsonNode.get("data");\n            Object obj = null;\n            if (data.isArray() && data.size() > 0) {\n                obj = MAPPER.readValue(data.traverse(),\n                        MAPPER.getTypeFactory().constructCollectionType(List.class, clazz));\n            }\n            return build(jsonNode.get("status").asText(), jsonNode.get("msg").asText(), obj);\n        } catch (Exception e) {\n            return null;\n        }\n    }\n\n    public String getStatus() {\n        return status;\n    }\n\n    public void setStatus(String status) {\n        this.status = status;\n    }\n\n    public String getMsg() {\n        return msg;\n    }\n\n    public void setMsg(String msg) {\n        this.msg = msg;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br")])]),a("p",[s._v("下面开始控制器的编写：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/SecurityRequestController.java\npackage com.shiyanlou;\n\nimport org.springframework.http.HttpStatus;\nimport org.springframework.security.web.DefaultRedirectStrategy;\nimport org.springframework.security.web.RedirectStrategy;\nimport org.springframework.security.web.savedrequest.HttpSessionRequestCache;\nimport org.springframework.security.web.savedrequest.RequestCache;\nimport org.springframework.security.web.savedrequest.SavedRequest;\nimport org.springframework.util.StringUtils;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseStatus;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n@RestController\npublic class SecurityRequestController {\n    // 封装了引发跳转请求的工具类，看实现类应该是从 session 中获取的\n    private RequestCache requestCache = new HttpSessionRequestCache();\n\n    // spring 的工具类：封装了所有跳转行为策略类\n    private RedirectStrategy redirectStrategy = new DefaultRedirectStrategy();\n\n    /**\n     * 当需要身份认证时跳转到这里\n     */\n    @RequestMapping("/authentication/require")\n    @ResponseStatus(code = HttpStatus.UNAUTHORIZED)\n    public RestResult requirAuthentication(HttpServletRequest request, HttpServletResponse response) throws IOException {\n\n        SavedRequest savedRequest = requestCache.getRequest(request, response);\n        // 如果有引发认证的请求\n        if (savedRequest != null) {\n            String targetUrl = savedRequest.getRedirectUrl();\n            System.out.println(("引发跳转的请求：" + targetUrl));\n            // 如果是 html 请求，则跳转到登录页\n            if (StringUtils.endsWithIgnoreCase(targetUrl, ".html")) {\n                redirectStrategy.sendRedirect(request, response, "/login");\n            }\n        }\n        // 否则都返回需要认证的 json 串\n        return new RestResult("访问受限，请前往登录页面");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201213-1607854475683",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("这块具体逻辑怎么实现，要根据业务的具体情况，这里我们先假设，如果是通过 "),a("code",[s._v(".html")]),s._v(" 后缀访问的都引导到登录页面，如果不是，则默认返回一个 "),a("code",[s._v("JSON")]),s._v(" 串。为了测试通过，最后调整两个地方：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/resources/templates/home.html\n<body>\n  \x3c!-- 这里加上 .html 后缀 --\x3e\n  <p>Click <a th:href="@{/hello.html}">here</a> to see a greeting.</p>\n</body>\nhello_security/src/main/java/com/shiyanlou/MvcConfig.java\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n\n    public void addViewControllers(ViewControllerRegistry registry) {\n        // 对应加上 .html 后缀\n        registry.addViewController("/hello.html").setViewName("hello");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("下面启动程序测试，先看看由页面引起的跳转测试：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529624840",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("正常能跳转到 "),a("code",[s._v("html")]),s._v(" 页面，然后我们再模拟一下表单请求，这里我们使用一个谷歌浏览器的 "),a("code",[s._v("Postman")]),s._v(" 插件，"),a("code",[s._v("Postman")]),s._v(" 是一款功能强大的网页调试与发送网页 HTTP 请求的 Chrome 插件。如果可以打开谷歌商店，可以直接在谷歌商店搜索即可。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201214-1607928328502",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("如果无法访问，可以选择离线安装，从该地址下载下来安装插件：https://labfile.oss.aliyuncs.com/courses/3013/postman.zip ，解压后，在谷歌浏览器菜单栏找到扩展程序，然后选择 "),a("strong",[s._v("加载已解压的扩展程序")]),s._v(" 即可。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201214-1607928569402",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("下面看一下请求结果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529634493",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("功能完成。")]),s._v(" "),a("h2",{attrs:{id:"登录成功后的处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登录成功后的处理"}},[s._v("#")]),s._v(" 登录成功后的处理")]),s._v(" "),a("p",[s._v("和上面同样的，关于 Ajax 请求，登录成功后也会面临不应该直接返回页面的情况。所以登录成功后我们也要进行额外处理，登录成功则返回相关的数据即可。自定义入口还是在表单登录处配置的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/WebSecurityConfig.java\npackage com.shiyanlou;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\n/**\n * spring security 安全配置项\n */\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    private MyAuthenticationSuccessHandler myAuthenticationSuccessHandler;\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                // 放过 /login 表单认证相关\n                .antMatchers( "/authentication/*", "/", "/home", "/login").permitAll()\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                // .loginPage("/login")\n                // 更换成自定义的一个真实存在的处理器地址\n                .loginPage("/authentication/require")\n                .loginProcessingUrl("/authentication/form")\n                // 加入自定义处理器\n                .successHandler(myAuthenticationSuccessHandler)\n                .permitAll()\n                .and()\n                // csrf 防护关掉\n                .csrf().disable()\n                .logout()\n                .permitAll();\n    }\n\n\n\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n\n//    @Autowired\n//    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n//        auth\n//                .inMemoryAuthentication()\n//                .passwordEncoder(new BCryptPasswordEncoder())\n//                .withUser("user")\n//                .password(new BCryptPasswordEncoder().encode("123456"))\n//                .roles("USER");\n//    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br")])]),a("p",[s._v("现在就写好上面代码提到的自定义处理器即可，回顾下我们的目的：如果 Ajax 访问返回 JSON 数据；在普通处理下跳转到之前访问的 URL。我们把两种情况都实现一下，到时候具体需要哪种处理方式直接切换即可：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('hello_security/src/main/java/com/shiyanlou/MyAuthenticationSuccessHandler.java\npackage com.shiyanlou;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler;\nimport org.springframework.stereotype.Component;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * formLogin().successHandler() 中需要的处理器类型\n */\n@Component("myAuthenticationSuccessHandler")\npublic class MyAuthenticationSuccessHandler extends SavedRequestAwareAuthenticationSuccessHandler {\n\n    // spring 是使用jackson来进行处理返回数据的\n    // 所以这里可以得到他的实例\n    @Autowired\n    private com.fasterxml.jackson.databind.ObjectMapper objectMapper;\n\n    private final static String LoginType = "JSON";\n\n    /**\n     * @param authentication 封装了所有的认证信息\n     */\n    @Override\n    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n\n        if (LoginType == "JSON") {\n            response.setContentType("application/json;charset=UTF-8");\n            response.getWriter().write(objectMapper.writeValueAsString(authentication));\n        } else {\n            super.onAuthenticationSuccess(request, response, authentication);\n        }\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201213-1607853672045",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("这样登录成功处理器就 ok 了。对于登录失败的处理器来说也是一样的，这里实现暂时没什么意义，后面再说。下面就可以启动项目进行测试喽，看效果（后面为了符合目前前后端开发的真实环境，尽量测试都在 postman 上进行）：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://doc.shiyanlou.com/courses/uid1484249-20201024-1603529659247",alt:"图片描述"}})]),s._v(" "),a("p",[s._v("返回过来的 JSON 字符串包含了我们需要的所有用户相关信息：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"authorities"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"authority"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"details"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"remoteAddress"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"172.16.2.250"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sessionId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[s._v("null")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"authenticated"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"principal"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"password"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"username"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"authorities"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"authority"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"accountNonExpired"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"accountNonLocked"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"credentialsNonExpired"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"credentials"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("到此为止，Spring Security 的基本认证过程就实现了。我们先讲了用户认证的处理逻辑，然后再讲了不同类型的请求执行不同的认证处理，最后又自定义了一个登录成功处理器。前两节主要是对 Spring Security 框架的一个入门使用，后面再逐渐集成到较真实的应用场景中去。")]),s._v(" "),a("p",[s._v("本节代码下载地址为：https://labfile.oss.aliyuncs.com/courses/3013/code2.zip")]),s._v(" "),a("h2",{attrs:{id:"其他实验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他实验"}},[s._v("#")]),s._v(" 其他实验")]),s._v(" "),a("p",[s._v("实验三:Spring Security 中自定义过滤器")]),s._v(" "),a("p",[s._v("知识点: 1.maven项目拆分 2.配置信息抽取 3.自定义过滤器链 4.验证码校验逻辑")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code3.zip")]),s._v(" "),a("p",[s._v("实验四:短信验证码登陆实现")]),s._v(" "),a("p",[s._v("知识点: 1.自定义Token令牌 2.自定义SpringSecurity处理器 3.UserDetailService接口扩展")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code4.zip")]),s._v(" "),a("p",[s._v("实验五:Session 管理")]),s._v(" "),a("p",[s._v("知识点: 1.Session超时设置 2.Session并发控制 3.集群Session管理")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code5.zip")]),s._v(" "),a("p",[s._v("实验六:Spring Security OAuth 介绍")]),s._v(" "),a("p",[s._v("知识点: 1.认证服务器 2.资源服务器 3.令牌刷新")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code6.zip")]),s._v(" "),a("p",[s._v("实验 7基于 OAuth 对代码进行重构")]),s._v(" "),a("p",[s._v("知识点: 1.基于Token实现表单登录 2.基于Token实现短信登录 3.授权管理配置")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code7.zip")]),s._v(" "),a("p",[s._v("实验 8令牌配置")]),s._v(" "),a("p",[s._v("知识点: 1.Token储存方式 2.JWT基本使用 3.JWT解析")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code8.zip")]),s._v(" "),a("p",[s._v("实验 9Spring Security 控制授权")]),s._v(" "),a("p",[s._v("知识点: 1.简单权限控制 2.权限表达式 3.基于数据库模型实现控制权限")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code9.zip")]),s._v(" "),a("p",[s._v("实验 10基于 Spring Security 实现单点登录")]),s._v(" "),a("p",[s._v("知识点: 1.SSO认证服务器 2.SSO单点登录实现 3.SSO自定义登录流程")]),s._v(" "),a("p",[s._v("https://labfile.oss.aliyuncs.com/courses/3013/code10.zip")])])}),[],!1,null,null,null);n.default=e.exports}}]);